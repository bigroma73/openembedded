
#
# Patch managed by http://www.mn-logistik.de/unsupported/pxa250/patcher
#

--- zcip-4/Makefile~compile
+++ zcip-4/Makefile
@@ -5,21 +5,17 @@
 CPPFLAGS=`libnet-config --cflags` `libnet-config --defines`
 CFLAGS=-O2 -Wall -W -I/usr/local/contrib/include -I/usr/local/include/pcap
 LDFLAGS=-L/usr/local/contrib/lib -L/usr/local/lib -static
-
-
+LIBS=-lpcap `libnet-config --libs`
 OBJS=zcip.o
 
-
-
-
 all: zcip make-arp
 
 
 make-arp: make-arp.o
-	$(CC) make-arp.o $(LDFLAGS) -o make-arp -lpcap `libnet-config --libs`
+	$(CC) make-arp.o $(LDFLAGS) -o make-arp $(LIBS)
 
 zcip: $(OBJS)
-	$(CC) -Wall -W $(OBJS) $(LDFLAGS) -o zcip -lpcap `libnet-config --libs`
+	$(CC) -Wall -W $(OBJS) $(LDFLAGS) -o zcip $(LIBS)
 
 
 clean:
--- zcip-4/zcip.c~compile
+++ zcip-4/zcip.c
@@ -1204,14 +1204,14 @@
 }
 
 void version(void) {
-    printf("zcip release " RELEASE "
-Copyright (C) 2001-2002 Various authors
-zcip comes with NO WARRANTY,
-to the extent permitted by law.
-You may redistribute copies of zcip
-under the terms of the 3-clause BSD license.
-For more information about these matters,
-see the file named Copyright.
+    printf("zcip release " RELEASE "\n\
+Copyright (C) 2001-2002 Various authors\n\
+zcip comes with NO WARRANTY,\n\
+to the extent permitted by law.\n\
+You may redistribute copies of zcip\n\
+under the terms of the 3-clause BSD license.\n\
+For more information about these matters,\n\
+see the file named Copyright.\n\
 ");
 
     exit (0);
@@ -1219,19 +1219,19 @@
 
 
 void usage(int exit_code) {
-    printf("usage: zcip [OPTIONS]
-Zeroconf IPv4 Link-Local Address Configuration
-OPTIONS:
-    -h, --help               Print this help, and exit.
-    -i, --interface IFNAME   Use interface IFNAME.
-                             If not provided it uses 'eth0'.
-    -r, --randseed           Seeds RNG with random # rather than MAC address.
-    -s, --syslog             Output to syslog instead of stdout.
-    -v, --version            Print the version information, and exit.
-
-This program does the ad-hoc link-local IPv4 auto-configuration trick, as
-described in the IETF Internet Draft 'Dynamic Configuration of IPv4
-Link-Local Addresses'.
+    printf("usage: zcip [OPTIONS]\n\
+Zeroconf IPv4 Link-Local Address Configuration\n\
+OPTIONS:\n\
+    -h, --help               Print this help, and exit.\n\
+    -i, --interface IFNAME   Use interface IFNAME.\n\
+                             If not provided it uses 'eth0'.\n\
+    -r, --randseed           Seeds RNG with random # rather than MAC address.\n\
+    -s, --syslog             Output to syslog instead of stdout.\n\
+    -v, --version            Print the version information, and exit.\n\
+\n\
+This program does the ad-hoc link-local IPv4 auto-configuration trick, as\n\
+described in the IETF Internet Draft 'Dynamic Configuration of IPv4\n\
+Link-Local Addresses'.\n\
 ");
 
     exit (exit_code);
--- zcip-4/make-arp.c~compile
+++ zcip-4/make-arp.c
@@ -106,19 +106,19 @@
 
 
 void usage(int exit_code) {
-    printf("
-make-arp -- sends arbitrary ARP Requests
-
-usage: make-arp [OPTIONS] [sea=SOURCE-EA] [sip=SOURCE-IP] tea=TARGET-EA tip=TARGET-IP
-
-OPTIONS:
-
-    -h          Print this help.
-
-
-Only ARP Requests for now.  In the Ethernet header, the source EA is
-mine and the target EA is the broadcast address FF:FF:FF:FF:FF:FF.
-
+    printf("\n\
+make-arp -- sends arbitrary ARP Requests\n\
+\n\
+usage: make-arp [OPTIONS] [sea=SOURCE-EA] [sip=SOURCE-IP] tea=TARGET-EA tip=TARGET-IP\n\
+\n\
+OPTIONS:\n\
+\n\
+    -h          Print this help.\n\
+\n\
+\n\
+Only ARP Requests for now.  In the Ethernet header, the source EA is\n\
+mine and the target EA is the broadcast address FF:FF:FF:FF:FF:FF.\n\
+\n\
 ");
 
     exit (exit_code);
