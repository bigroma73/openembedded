diff -Naur libdvdnav-0.1.10-org/src/dvdnav.c libdvdnav-0.1.10/src/dvdnav.c
--- libdvdnav-0.1.10-org/src/dvdnav.c	2004-01-31 18:12:58.000000000 +0100
+++ libdvdnav-0.1.10/src/dvdnav.c	2008-03-28 15:24:50.000000000 +0100
@@ -16,9 +16,6 @@
  * You should have received a copy of the GNU General Public License
  * along with this program; if not, write to the Free Software
  * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
- *
- * $Id: dvdnav.c,v 1.63 2004/01/31 17:12:58 jcdutton Exp $
- *
  */
 
 #ifdef HAVE_CONFIG_H
@@ -67,7 +64,7 @@
   struct timeval time;
   
   /* Create a new structure */
-  fprintf(MSG_OUT, "libdvdnav: Using dvdnav version %s from http://dvd.sf.net\n", VERSION);
+  fprintf(MSG_OUT, "libdvdnav: Using dvdnav version %s from http://xine.sf.net\n", VERSION);
 
   (*dest) = NULL;
   this = (dvdnav_t*)malloc(sizeof(dvdnav_t));
@@ -203,7 +200,7 @@
 }
 
 /* converts a dvd_time_t to PTS ticks */
-static int64_t dvdnav_convert_time(dvd_time_t *time) {
+int64_t dvdnav_convert_time(dvd_time_t *time) {
   int64_t result;
   int64_t frames;
   
@@ -403,7 +400,10 @@
   
   if(!this->started) {
     /* Start the VM */
-    vm_start(this->vm);
+    if (!vm_start(this->vm)) {
+      printerr("Encrypted or faulty DVD");
+      return DVDNAV_STATUS_ERR;
+    }
     this->started = 1;
   }
 
@@ -665,16 +665,10 @@
     fprintf(MSG_OUT, "libdvdnav: SPU_STREAM_CHANGE stream_id_wide=%d\n",stream_change->physical_wide);
     fprintf(MSG_OUT, "libdvdnav: SPU_STREAM_CHANGE stream_id_letterbox=%d\n",stream_change->physical_letterbox);
     fprintf(MSG_OUT, "libdvdnav: SPU_STREAM_CHANGE stream_id_pan_scan=%d\n",stream_change->physical_pan_scan);
+    fprintf(MSG_OUT, "libdvdnav: SPU_STREAM_CHANGE returning DVDNAV_STATUS_OK\n");
 #endif
-    if (stream_change->physical_wide != -1 &&
-        stream_change->physical_letterbox != -1 &&
-        stream_change->physical_pan_scan != -1) {
-#ifdef LOG_DEBUG
-      fprintf(MSG_OUT, "libdvdnav: SPU_STREAM_CHANGE returning DVDNAV_STATUS_OK\n");
-#endif
-      pthread_mutex_unlock(&this->vm_lock); 
-      return DVDNAV_STATUS_OK;
-    }
+    pthread_mutex_unlock(&this->vm_lock); 
+    return DVDNAV_STATUS_OK;
   }
 
   /* has the audio channel changed? */  
diff -Naur libdvdnav-0.1.10-org/src/dvdnav_events.h libdvdnav-0.1.10/src/dvdnav_events.h
--- libdvdnav-0.1.10-org/src/dvdnav_events.h	2003-04-27 03:26:18.000000000 +0200
+++ libdvdnav-0.1.10/src/dvdnav_events.h	2008-01-23 06:11:52.000000000 +0100
@@ -16,9 +16,6 @@
  * You should have received a copy of the GNU General Public License
  * along with this program; if not, write to the Free Software
  * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
- *
- * $Id: dvdnav_events.h,v 1.12 2003/04/27 01:26:18 jcdutton Exp $
- *
  */
 
 /*
diff -Naur libdvdnav-0.1.10-org/src/dvdnav.h libdvdnav-0.1.10/src/dvdnav.h
--- libdvdnav-0.1.10-org/src/dvdnav.h	2003-06-09 17:17:44.000000000 +0200
+++ libdvdnav-0.1.10/src/dvdnav.h	2008-01-23 06:11:52.000000000 +0100
@@ -16,9 +16,6 @@
  * You should have received a copy of the GNU General Public License
  * along with this program; if not, write to the Free Software
  * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
- *
- * $Id: dvdnav.h,v 1.31 2003/06/09 15:17:44 mroi Exp $
- *
  */
 
 /*
@@ -114,6 +111,8 @@
  */
 const char* dvdnav_err_to_string(dvdnav_t *self);
 
+/* converts a dvd_time_t to PTS ticks */
+int64_t dvdnav_convert_time(dvd_time_t *time);
 
 /*********************************************************************
  * changing and reading DVD player characteristics                   *
diff -Naur libdvdnav-0.1.10-org/src/dvdnav_internal.h libdvdnav-0.1.10/src/dvdnav_internal.h
--- libdvdnav-0.1.10-org/src/dvdnav_internal.h	2004-02-13 20:16:17.000000000 +0100
+++ libdvdnav-0.1.10/src/dvdnav_internal.h	2008-03-28 15:24:50.000000000 +0100
@@ -1,5 +1,5 @@
 /* 
- * Copyright (C) 2001 Rich Wareham <richwareham@users.sourceforge.net>
+ * Copyright (C) 2001-2004 Rich Wareham <richwareham@users.sourceforge.net>
  * 
  * This file is part of libdvdnav, a DVD navigation library.
  * 
@@ -16,9 +16,6 @@
  * You should have received a copy of the GNU General Public License
  * along with this program; if not, write to the Free Software
  * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
- *
- * $Id: dvdnav_internal.h,v 1.12 2004/02/13 19:16:17 mroi Exp $
- *
  */
 
 #ifndef DVDNAV_INTERNAL_H_INCLUDED
@@ -34,6 +31,34 @@
 #include <limits.h>
 #include <string.h>
 
+#ifndef HAVE_GETTIMEOFDAY
+#  ifdef WIN32
+#    include <winsock.h>
+struct timezone;
+#  else
+#    include <sys/time.h>
+#  endif
+/* replacement gettimeofday implementation */
+#include <sys/timeb.h>
+static inline int dvdnav_private_gettimeofday( struct timeval *tv, void *tz )
+{
+  struct timeb t;
+  ftime( &t );
+  tv->tv_sec = t.time;
+  tv->tv_usec = t.millitm * 1000;
+  return 0;
+}
+#define gettimeofday(TV, TZ) dvdnav_private_gettimeofday((TV), (TZ))
+#define HAVE_GETTIMEOFDAY 1
+#endif
+
+#ifndef HAVE_SNPRINTF
+#  ifdef HAVE__SNPRINTF
+#    define snprintf _snprintf
+#    define HAVE_SNPRINTF 1
+#  endif
+#endif
+
 #ifdef WIN32
 
 /* pthread_mutex_* wrapper for win32 */
@@ -45,16 +70,6 @@
 #define pthread_mutex_unlock(a)  LeaveCriticalSection(a)
 #define pthread_mutex_destroy(a)
 
-/* replacement gettimeofday implementation */
-#include <sys/timeb.h>
-static inline int gettimeofday( struct timeval *tv, void *tz )
-{
-  struct timeb t;
-  ftime( &t );
-  tv->tv_sec = t.time;
-  tv->tv_usec = t.millitm * 1000;
-  return 0;
-}
 #include <io.h> /* read() */
 #define lseek64 _lseeki64
 
@@ -184,15 +199,38 @@
 
 /** USEFUL MACROS **/
 
+/* printerr*() are often called when this is NULL. Avoid segfaults by replacing these with
+ * more common prints
+ */
 #ifdef __GNUC__
-#define printerrf(format, args...) snprintf(this->err_str, MAX_ERR_LEN, format, ## args);
+#define printerrf(format, args...)					\
+  do {									\
+    if ( ! this ) fprintf(stderr, "Missing 'this' pointer while erroring:" format "\n", ## args); \
+    else snprintf(this->err_str, MAX_ERR_LEN, format, ## args);		\
+  } while(0);
 #else
 #ifdef _MSC_VER
 #define printerrf(str) snprintf(this->err_str, MAX_ERR_LEN, str);
 #else
-#define printerrf(...) snprintf(this->err_str, MAX_ERR_LEN, __VA_ARGS__);
+#define printerrf(...)						 \
+  do {								 \
+    if ( ! this ) {						 \
+      fprintf(stderr, "Missing 'this' pointer while erroring:"); \
+      fprintf(stderr, __VA_ARGS__);				 \
+      fprintf(stderr, "\n");					 \
+    } else {							 \
+      snprintf(this->err_str, MAX_ERR_LEN, __VA_ARGS__);	 \
+    }								 \
+  } while(0);
 #endif /* WIN32 */
 #endif
-#define printerr(str) strncpy(this->err_str, str, MAX_ERR_LEN);
+#define printerr(str)							\
+  do {									\
+    if ( ! this ) {							\
+      fprintf(stderr, "Missing 'this' pointer while erroring: %s\n", str); \
+    } else {								\
+      strncpy(this->err_str, str, MAX_ERR_LEN);				\
+    }									\
+  } while(0);
 
 #endif /* DVDNAV_INTERNAL_H_INCLUDED */
diff -Naur libdvdnav-0.1.10-org/src/dvdread/bswap.h libdvdnav-0.1.10/src/dvdread/bswap.h
--- libdvdnav-0.1.10-org/src/dvdread/bswap.h	2004-01-11 22:43:13.000000000 +0100
+++ libdvdnav-0.1.10/src/dvdread/bswap.h	2008-01-23 06:11:52.000000000 +0100
@@ -3,7 +3,7 @@
 
 /*
  * Copyright (C) 2000, 2001 Billy Biggs <vektor@dumbterm.net>,
- *                          Håkan Hjort <d95hjort@dtek.chalmers.se>
+ *                          HÃ¥kan Hjort <d95hjort@dtek.chalmers.se>
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -35,12 +35,24 @@
 #include <sys/param.h>
 #endif
 
-#if defined(__linux__)
+#if defined(__linux__) || defined(__GLIBC__)
 #include <byteswap.h>
 #define B2N_16(x) x = bswap_16(x)
 #define B2N_32(x) x = bswap_32(x)
 #define B2N_64(x) x = bswap_64(x)
 
+#elif defined(__SVR4) && defined(__sun)
+#include <sys/byteorder.h>
+#define B2N_16(x) x = BSWAP_16(x)
+#define B2N_32(x) x = BSWAP_32(x)
+#define B2N_64(x) x = BSWAP_64(x)
+
+#elif defined(__APPLE__)
+#include <libkern/OSByteOrder.h>
+#define B2N_16(x) x = OSSwapBigToHostInt16(x)
+#define B2N_32(x) x = OSSwapBigToHostInt32(x)
+#define B2N_64(x) x = OSSwapBigToHostInt64(x)
+
 #elif defined(__NetBSD__)
 #include <sys/endian.h>
 #define B2N_16(x) BE16TOH(x)
@@ -61,11 +73,11 @@
 
 /* This is a slow but portable implementation, it has multiple evaluation 
  * problems so beware.
- * Old FreeBSD's and Solaris don't have <byteswap.h> or any other such 
+ * Old FreeBSD and Windows don't have <byteswap.h> or any other such 
  * functionality! 
  */
 
-#elif defined(__FreeBSD__) || defined(__sun) || defined(__bsdi__) || defined(WIN32) || defined(__CYGWIN__)
+#elif defined(__FreeBSD__) || defined(__bsdi__) || defined(WIN32) || defined(__CYGWIN__)
 #define B2N_16(x) \
  x = ((((x) & 0xff00) >> 8) | \
       (((x) & 0x00ff) << 8))
diff -Naur libdvdnav-0.1.10-org/src/dvdread/dvd_input.c libdvdnav-0.1.10/src/dvdread/dvd_input.c
--- libdvdnav-0.1.10-org/src/dvdread/dvd_input.c	2004-04-09 14:15:26.000000000 +0200
+++ libdvdnav-0.1.10/src/dvdread/dvd_input.c	2008-01-23 06:11:52.000000000 +0100
@@ -1,6 +1,6 @@
 /*
  * Copyright (C) 2002 Samuel Hocevar <sam@zoy.org>,
- *                    Håkan Hjort <d95hjort@dtek.chalmers.se>
+ *                    HÃ¥kan Hjort <d95hjort@dtek.chalmers.se>
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -35,6 +35,7 @@
 int         (*dvdinput_title) (dvd_input_t, int); 
 int         (*dvdinput_read)  (dvd_input_t, void *, int, int);
 char *      (*dvdinput_error) (dvd_input_t);
+int         (*dvdinput_is_encrypted) (dvd_input_t);
 
 #ifdef HAVE_DVDCSS_DVDCSS_H
 /* linking to libdvdcss */
@@ -55,6 +56,73 @@
 #include "../../msvc/contrib/dlfcn.c"
 #endif
 
+/* Copied from css.h */
+#define KEY_SIZE 5
+
+typedef uint8_t dvd_key_t[KEY_SIZE];
+
+typedef struct dvd_title_s
+{
+    int                 i_startlb;
+    dvd_key_t           p_key;
+    struct dvd_title_s *p_next;
+} dvd_title_t;
+
+typedef struct css_s
+{
+    int             i_agid;      /* Current Authenication Grant ID. */
+    dvd_key_t       p_bus_key;   /* Current session key. */
+    dvd_key_t       p_disc_key;  /* This DVD disc's key. */
+    dvd_key_t       p_title_key; /* Current title key. */
+} css_t;
+
+/* Copied from libdvdcss.h */
+
+#ifndef PATH_MAX
+#define PATH_MAX 4096
+#endif
+
+struct dvdcss_s
+{
+    /* File descriptor */
+    char * psz_device;
+    int    i_fd;
+    int    i_read_fd;
+    int    i_pos;
+
+    /* File handling */
+    void *pf_seek;
+    void *pf_read;
+    void *pf_readv;
+
+    /* Decryption stuff */
+    int          i_method;
+    css_t        css;
+    int          b_ioctls;
+    int          b_scrambled;
+    dvd_title_t *p_titles;
+
+    /* Key cache directory and pointer to the filename */
+    char   psz_cachefile[PATH_MAX];
+    char * psz_block;
+
+    /* Error management */
+    char * psz_error;
+    int    b_errors;
+    int    b_debug;
+
+#ifdef WIN32
+    int    b_file;
+    char * p_readv_buffer;
+    int    i_readv_buf_size;
+#endif
+
+#ifndef WIN32
+    int    i_raw_fd;
+#endif
+};
+
+
 typedef struct dvdcss_s *dvdcss_handle;
 static dvdcss_handle (*DVDcss_open)  (const char *);
 static int           (*DVDcss_close) (dvdcss_handle);
@@ -149,8 +217,13 @@
   return 0;
 }
 
-
-
+static int css_is_encrypted (dvd_input_t dev)
+{
+  if (dev->dvdcss == NULL) {
+    return 0;
+  }
+  return dev->dvdcss->b_scrambled;
+}
 
 
 
@@ -269,6 +342,10 @@
   return 0;
 }
 
+static int file_is_encrypted (dvd_input_t dev)
+{
+  return 0;
+}
 
 /**
  * Setup read functions with either libdvdcss or minimal DVD access.
@@ -287,10 +364,12 @@
 #else
   /* dlopening libdvdcss */
 
-#ifndef WIN32
-  dvdcss_library = dlopen("libdvdcss.so.2", RTLD_LAZY);
-#else
+#ifdef HOST_OS_DARWIN
+  dvdcss_library = dlopen("libdvdcss.2.dylib", RTLD_LAZY);
+#elif defined(WIN32)
   dvdcss_library = dlopen("libdvdcss.dll", RTLD_LAZY);
+#else
+  dvdcss_library = dlopen("libdvdcss.so.2", RTLD_LAZY);
 #endif
 
   if(dvdcss_library != NULL) {
@@ -323,7 +402,7 @@
       dvdcss_library = NULL;
     } else if(!DVDcss_open  || !DVDcss_close || !DVDcss_title || !DVDcss_seek
 	      || !DVDcss_read || !DVDcss_error || !dvdcss_version) {
-      fprintf(stderr,  "libdvdread: Missing symbols in libdvdcss.so.2, "
+      fprintf(stderr,  "libdvdread: Missing symbols in libdvdcss, "
 	      "this shouldn't happen !\n");
       dlclose(dvdcss_library);
     }
@@ -347,6 +426,7 @@
     dvdinput_title = css_title;
     dvdinput_read  = css_read;
     dvdinput_error = css_error;
+    dvdinput_is_encrypted = css_is_encrypted;
     return 1;
     
   } else {
@@ -359,6 +439,7 @@
     dvdinput_title = file_title;
     dvdinput_read  = file_read;
     dvdinput_error = file_error;
+    dvdinput_is_encrypted = file_is_encrypted;
     return 0;
   }
 }
diff -Naur libdvdnav-0.1.10-org/src/dvdread/dvd_input.h libdvdnav-0.1.10/src/dvdread/dvd_input.h
--- libdvdnav-0.1.10-org/src/dvdread/dvd_input.h	2004-01-11 22:43:13.000000000 +0100
+++ libdvdnav-0.1.10/src/dvdread/dvd_input.h	2008-01-23 06:11:52.000000000 +0100
@@ -3,7 +3,7 @@
 
 /*
  * Copyright (C) 2001, 2002 Samuel Hocevar <sam@zoy.org>,
- *                          Håkan Hjort <d95hjort@dtek.chalmers.se>
+ *                          HÃ¥kan Hjort <d95hjort@dtek.chalmers.se>
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -38,6 +38,7 @@
 extern int         (*dvdinput_title) (dvd_input_t, int); 
 extern int         (*dvdinput_read)  (dvd_input_t, void *, int, int);
 extern char *      (*dvdinput_error) (dvd_input_t);
+extern int         (*dvdinput_is_encrypted) (dvd_input_t);
 
 /**
  * Setup function accessed by dvd_reader.c.  Returns 1 if there is CSS support.
diff -Naur libdvdnav-0.1.10-org/src/dvdread/dvd_reader.c libdvdnav-0.1.10/src/dvdread/dvd_reader.c
--- libdvdnav-0.1.10-org/src/dvdread/dvd_reader.c	2004-03-03 17:48:36.000000000 +0100
+++ libdvdnav-0.1.10/src/dvdread/dvd_reader.c	2008-03-17 17:18:01.000000000 +0100
@@ -1,7 +1,7 @@
 /*
- * Copyright (C) 2001, 2002, 2003 Billy Biggs <vektor@dumbterm.net>,
- *                                Håkan Hjort <d95hjort@dtek.chalmers.se>,
- *                                Björn Englund <d4bjorn@dtek.chalmers.se>
+ * Copyright (C) 2001-2004 Billy Biggs <vektor@dumbterm.net>,
+ *                         HÃ¥kan Hjort <d95hjort@dtek.chalmers.se>,
+ *                         BjÃ¶rn Englund <d4bjorn@dtek.chalmers.se>
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -32,11 +32,16 @@
 #include <limits.h>
 #include <dirent.h>
 
-/* misc win32 helpers */
-#ifdef WIN32
+#ifndef HAVE_GETTIMEOFDAY
+#  ifdef WIN32
+#    include <winsock.h>
+struct timezone;
+#  else
+#    include <sys/time.h>
+#  endif
 /* replacement gettimeofday implementation */
 #include <sys/timeb.h>
-static inline int gettimeofday( struct timeval *tv, void *tz )
+static inline int _private_gettimeofday( struct timeval *tv, void *tz )
 {
   struct timeb t;
   ftime( &t );
@@ -44,11 +49,16 @@
   tv->tv_usec = t.millitm * 1000;
   return 0;
 }
+#define gettimeofday(TV, TZ) _private_gettimeofday((TV), (TZ))
+#endif
+
+/* misc win32 helpers */
+#ifdef WIN32
 #include <io.h> /* read() */
 #define lseek64 _lseeki64
 #endif
  
-#if defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__NetBSD__) || defined(__bsdi__)|| defined(__DARWIN__)
+#if defined(__FreeBSD_kernel__) || defined(__OpenBSD__) || defined(__NetBSD__) || defined(__bsdi__)|| defined(__DARWIN__)
 #define SYS_BSD 1
 #endif
 
@@ -478,6 +489,13 @@
 			     me->mnt_fsname,
 			     me->mnt_dir );
                     auth_drive = DVDOpenImageFile( me->mnt_fsname, have_css );
+		    /* If the device is not encrypted, don't access the device
+		     * directly as it would fail for non-UDF DVDs */
+		    if ( auth_drive && dvdinput_is_encrypted( auth_drive->dev ) == 0) {
+		      DVDClose( auth_drive );
+		      auth_drive = NULL;
+		      break;
+		    }
 		    dev_name = strdup(me->mnt_fsname);
                     break;
                 }
@@ -585,10 +603,12 @@
             sprintf( filename, "%s%s%s", path,
                      ( ( path[ strlen( path ) - 1 ] == '/' ) ? "" : "/" ),
                      ent->d_name );
+            closedir (dir);
             return 0;
         }
     }
 
+    closedir (dir);
     return -1;
 }
 
@@ -1017,6 +1037,28 @@
     return offset;
 }
 
+int32_t DVDFileSeekForce( dvd_file_t *dvd_file, int offset, int force_size )
+{
+  /* Check arguments. */
+  if( dvd_file == NULL || offset < 0 )
+    return -1;
+
+  if( dvd_file->dvd->isImageFile ) {
+    if( force_size < 0 )
+      force_size = (offset - 1) / DVD_VIDEO_LB_LEN + 1;
+    if( dvd_file->filesize < force_size) {
+      dvd_file->filesize = force_size;
+      fprintf(stderr, "libdvdread: Ignored UDF provided size of file.\n");
+    }
+  }
+
+  if( offset > dvd_file->filesize * DVD_VIDEO_LB_LEN ) {
+    return -1;
+  }
+  dvd_file->seek_pos = (uint32_t) offset;
+  return offset;
+}
+
 ssize_t DVDReadBytes( dvd_file_t *dvd_file, void *data, size_t byte_size )
 {
     unsigned char *secbuf_base, *secbuf;
@@ -1057,7 +1099,7 @@
     memcpy( data, &(secbuf[ seek_byte ]), byte_size );
     free( secbuf_base );
 
-    dvd_file->seek_pos += byte_size;
+    DVDFileSeekForce(dvd_file, dvd_file->seek_pos + byte_size, -1);
     return byte_size;
 }
 
diff -Naur libdvdnav-0.1.10-org/src/dvdread/dvd_reader.h libdvdnav-0.1.10/src/dvdread/dvd_reader.h
--- libdvdnav-0.1.10-org/src/dvdread/dvd_reader.h	2004-02-01 18:55:19.000000000 +0100
+++ libdvdnav-0.1.10/src/dvdread/dvd_reader.h	2008-03-28 15:24:50.000000000 +0100
@@ -3,8 +3,8 @@
 
 /*
  * Copyright (C) 2001, 2002 Billy Biggs <vektor@dumbterm.net>,
- *                          Håkan Hjort <d95hjort@dtek.chalmers.se>,
- *                          Björn Englund <d4bjorn@dtek.chalmers.se>
+ *                          HÃ¥kan Hjort <d95hjort@dtek.chalmers.se>,
+ *                          BjÃ¶rn Englund <d4bjorn@dtek.chalmers.se>
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -21,9 +21,11 @@
  * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
  */
 
-#ifdef _MSC_VER
+#ifdef HAVE_CONFIG_H
 #include <config.h>
+#endif
 
+#ifdef _MSC_VER
 #include <stdio.h>
 #include <stdlib.h>
 #endif
@@ -169,6 +171,8 @@
  */
 int32_t DVDFileSeek( dvd_file_t *, int32_t );
 
+int32_t DVDFileSeekForce( dvd_file_t *, int, int );
+
 /**
  * Reads the given number of bytes from the file.  This call can only be used
  * on the information files, and may not be used for reading from a VOB.  This
diff -Naur libdvdnav-0.1.10-org/src/dvdread/dvd_udf.c libdvdnav-0.1.10/src/dvdread/dvd_udf.c
--- libdvdnav-0.1.10-org/src/dvdread/dvd_udf.c	2004-03-03 17:48:36.000000000 +0100
+++ libdvdnav-0.1.10/src/dvdread/dvd_udf.c	2008-03-07 15:19:43.000000000 +0100
@@ -4,7 +4,7 @@
  *
  * Modifications by:
  *   Billy Biggs <vektor@dumbterm.net>.
- *   Björn Englund <d4bjorn@dtek.chalmers.se>.
+ *   BjÃ¶rn Englund <d4bjorn@dtek.chalmers.se>.
  *
  * dvdudf: parse and read the UDF volume information of a DVD Video
  * Copyright (C) 1999 Christian Wolff for convergence integrated media
diff -Naur libdvdnav-0.1.10-org/src/dvdread/dvd_udf.h libdvdnav-0.1.10/src/dvdread/dvd_udf.h
--- libdvdnav-0.1.10-org/src/dvdread/dvd_udf.h	2004-01-11 22:43:13.000000000 +0100
+++ libdvdnav-0.1.10/src/dvdread/dvd_udf.h	2008-01-23 06:11:52.000000000 +0100
@@ -7,7 +7,7 @@
  *
  * Modifications by:
  *   Billy Biggs <vektor@dumbterm.net>.
- *   Björn Englund <d4bjorn@dtek.chalmers.se>.
+ *   BjÃ¶rn Englund <d4bjorn@dtek.chalmers.se>.
  * 
  * dvdudf: parse and read the UDF volume information of a DVD Video
  * Copyright (C) 1999 Christian Wolff for convergence integrated media
diff -Naur libdvdnav-0.1.10-org/src/dvdread/ifo_read.c libdvdnav-0.1.10/src/dvdread/ifo_read.c
--- libdvdnav-0.1.10-org/src/dvdread/ifo_read.c	2004-02-23 19:14:42.000000000 +0100
+++ libdvdnav-0.1.10/src/dvdread/ifo_read.c	2008-03-17 17:18:01.000000000 +0100
@@ -1,7 +1,7 @@
 /*
  * Copyright (C) 2000, 2001, 2002, 2003
- *               Björn Englund <d4bjorn@dtek.chalmers.se>, 
- *               Håkan Hjort <d95hjort@dtek.chalmers.se>
+ *               BjÃ¶rn Englund <d4bjorn@dtek.chalmers.se>, 
+ *               HÃ¥kan Hjort <d95hjort@dtek.chalmers.se>
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -93,6 +93,10 @@
   return (DVDFileSeek(dvd_file, (int)offset) == (int)offset);
 }
 
+static inline int32_t DVDFileSeekForce_( dvd_file_t *dvd_file, uint32_t offset, int force_size ) {
+  return (DVDFileSeekForce(dvd_file, (int)offset, force_size) == (int)offset);
+}
+
 
 ifo_handle_t *ifoOpen(dvd_reader_t *dvd, int title) {
   ifo_handle_t *ifofile;
@@ -683,7 +687,7 @@
     pgc->command_tbl = NULL;
   }
   
-  if(pgc->program_map_offset != 0) {
+  if(pgc->program_map_offset != 0 && pgc->nr_of_programs>0) {
     pgc->program_map = malloc(pgc->nr_of_programs * sizeof(pgc_program_map_t));
     if(!pgc->program_map) {
       ifoFree_PGC_COMMAND_TBL(pgc->command_tbl);
@@ -699,7 +703,7 @@
     pgc->program_map = NULL;
   }
   
-  if(pgc->cell_playback_offset != 0) {
+  if(pgc->cell_playback_offset != 0 && pgc->nr_of_cells>0) {
     pgc->cell_playback = malloc(pgc->nr_of_cells * sizeof(cell_playback_t));
     if(!pgc->cell_playback) {
       ifoFree_PGC_COMMAND_TBL(pgc->command_tbl);
@@ -720,7 +724,7 @@
     pgc->cell_playback = NULL;
   }
   
-  if(pgc->cell_position_offset != 0) {
+  if(pgc->cell_position_offset != 0 && pgc->nr_of_cells>0) {
     pgc->cell_position = malloc(pgc->nr_of_cells * sizeof(cell_position_t));
     if(!pgc->cell_position) {
       ifoFree_PGC(pgc);
@@ -1507,7 +1511,7 @@
   unsigned int i;
   int info_length;
 
-  if(!DVDFileSeek_(ifofile->file, sector * DVD_BLOCK_LEN))
+  if(!DVDFileSeekForce_(ifofile->file, sector * DVD_BLOCK_LEN, sector))
     return 0;
 
   if(!(DVDReadBytes(ifofile->file, vobu_admap, VOBU_ADMAP_SIZE)))
diff -Naur libdvdnav-0.1.10-org/src/dvdread/ifo_read.h libdvdnav-0.1.10/src/dvdread/ifo_read.h
--- libdvdnav-0.1.10-org/src/dvdread/ifo_read.h	2004-01-11 22:43:13.000000000 +0100
+++ libdvdnav-0.1.10/src/dvdread/ifo_read.h	2008-01-23 06:11:52.000000000 +0100
@@ -2,8 +2,8 @@
 #define IFO_READ_H_INCLUDED
 
 /*
- * Copyright (C) 2000, 2001, 2002 Björn Englund <d4bjorn@dtek.chalmers.se>,
- *                                Håkan Hjort <d95hjort@dtek.chalmers.se>
+ * Copyright (C) 2000, 2001, 2002 BjÃ¶rn Englund <d4bjorn@dtek.chalmers.se>,
+ *                                HÃ¥kan Hjort <d95hjort@dtek.chalmers.se>
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
diff -Naur libdvdnav-0.1.10-org/src/dvdread/ifo_types.h libdvdnav-0.1.10/src/dvdread/ifo_types.h
--- libdvdnav-0.1.10-org/src/dvdread/ifo_types.h	2004-01-11 22:43:13.000000000 +0100
+++ libdvdnav-0.1.10/src/dvdread/ifo_types.h	2008-01-23 06:11:52.000000000 +0100
@@ -2,8 +2,8 @@
 #define IFO_TYPES_H_INCLUDED
 
 /*
- * Copyright (C) 2000, 2001 Björn Englund <d4bjorn@dtek.chalmers.se>,
- *                          Håkan Hjort <d95hjort@dtek.chalmers.se>
+ * Copyright (C) 2000, 2001 BjÃ¶rn Englund <d4bjorn@dtek.chalmers.se>,
+ *                          HÃ¥kan Hjort <d95hjort@dtek.chalmers.se>
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
diff -Naur libdvdnav-0.1.10-org/src/dvdread/md5.c libdvdnav-0.1.10/src/dvdread/md5.c
--- libdvdnav-0.1.10-org/src/dvdread/md5.c	2004-01-11 22:43:13.000000000 +0100
+++ libdvdnav-0.1.10/src/dvdread/md5.c	2008-03-28 15:24:50.000000000 +0100
@@ -26,14 +26,8 @@
 
 #include <sys/types.h>
 
-#if STDC_HEADERS || defined _LIBC
-# include <stdlib.h>
-# include <string.h>
-#else
-# ifndef HAVE_MEMCPY
-#  define memcpy(d, s, n) bcopy ((s), (d), (n))
-# endif
-#endif
+#include <stdlib.h>
+#include <string.h>
 
 #include "md5.h"
 /* #include "unlocked-io.h" */
diff -Naur libdvdnav-0.1.10-org/src/dvdread/nav_print.c libdvdnav-0.1.10/src/dvdread/nav_print.c
--- libdvdnav-0.1.10-org/src/dvdread/nav_print.c	2004-01-11 22:43:13.000000000 +0100
+++ libdvdnav-0.1.10/src/dvdread/nav_print.c	2008-01-23 06:11:52.000000000 +0100
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2000, 2001, 2002, 2003 Håkan Hjort <d95hjort@dtek.chalmers.se>
+ * Copyright (C) 2000, 2001, 2002, 2003 HÃ¥kan Hjort <d95hjort@dtek.chalmers.se>
  *
  * Much of the contents in this file is based on VOBDUMP.
  *
@@ -65,7 +65,8 @@
   printf("pci_gi:\n");
   printf("nv_pck_lbn    0x%08x\n", pci_gi->nv_pck_lbn);
   printf("vobu_cat      0x%04x\n", pci_gi->vobu_cat);
-  printf("vobu_uop_ctl  0x%08x\n", *(uint32_t*)&pci_gi->vobu_uop_ctl);
+/* This will break strict aliasing, better avoid as this seems to be useless
+  printf("vobu_uop_ctl  0x%08x\n", *(uint32_t*)&pci_gi->vobu_uop_ctl); */
   printf("vobu_s_ptm    0x%08x\n", pci_gi->vobu_s_ptm);
   printf("vobu_e_ptm    0x%08x\n", pci_gi->vobu_e_ptm);
   printf("vobu_se_e_ptm 0x%08x\n", pci_gi->vobu_se_e_ptm);
diff -Naur libdvdnav-0.1.10-org/src/dvdread/nav_print.h libdvdnav-0.1.10/src/dvdread/nav_print.h
--- libdvdnav-0.1.10-org/src/dvdread/nav_print.h	2004-01-11 22:43:13.000000000 +0100
+++ libdvdnav-0.1.10/src/dvdread/nav_print.h	2008-01-23 06:11:52.000000000 +0100
@@ -3,7 +3,7 @@
 
 /*
  * Copyright (C) 2001, 2002 Billy Biggs <vektor@dumbterm.net>,
- *                          Håkan Hjort <d95hjort@dtek.chalmers.se>
+ *                          HÃ¥kan Hjort <d95hjort@dtek.chalmers.se>
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
diff -Naur libdvdnav-0.1.10-org/src/dvdread/nav_read.c libdvdnav-0.1.10/src/dvdread/nav_read.c
--- libdvdnav-0.1.10-org/src/dvdread/nav_read.c	2004-03-03 17:50:41.000000000 +0100
+++ libdvdnav-0.1.10/src/dvdread/nav_read.c	2008-01-23 06:11:52.000000000 +0100
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2000, 2001, 2002, 2003 Håkan Hjort <d95hjort@dtek.chalmers.se>
+ * Copyright (C) 2000, 2001, 2002, 2003 HÃ¥kan Hjort <d95hjort@dtek.chalmers.se>
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
diff -Naur libdvdnav-0.1.10-org/src/dvdread/nav_read.h libdvdnav-0.1.10/src/dvdread/nav_read.h
--- libdvdnav-0.1.10-org/src/dvdread/nav_read.h	2004-01-11 22:43:13.000000000 +0100
+++ libdvdnav-0.1.10/src/dvdread/nav_read.h	2008-01-23 06:11:52.000000000 +0100
@@ -2,7 +2,7 @@
 #define NAV_READ_H_INCLUDED
 
 /*
- * Copyright (C) 2000, 2001, 2002 Håkan Hjort <d95hjort@dtek.chalmers.se>.
+ * Copyright (C) 2000, 2001, 2002 HÃ¥kan Hjort <d95hjort@dtek.chalmers.se>.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
diff -Naur libdvdnav-0.1.10-org/src/dvdread/nav_types.h libdvdnav-0.1.10/src/dvdread/nav_types.h
--- libdvdnav-0.1.10-org/src/dvdread/nav_types.h	2004-01-11 22:43:13.000000000 +0100
+++ libdvdnav-0.1.10/src/dvdread/nav_types.h	2008-01-23 06:11:52.000000000 +0100
@@ -2,7 +2,7 @@
 #define NAV_TYPES_H_INCLUDED
 
 /*
- * Copyright (C) 2000, 2001, 2002 Håkan Hjort <d95hjort@dtek.chalmers.se>
+ * Copyright (C) 2000, 2001, 2002 HÃ¥kan Hjort <d95hjort@dtek.chalmers.se>
  *
  * The data structures in this file should represent the layout of the
  * pci and dsi packets as they are stored in the stream.  Information
diff -Naur libdvdnav-0.1.10-org/src/dvd_types.h libdvdnav-0.1.10/src/dvd_types.h
--- libdvdnav-0.1.10-org/src/dvd_types.h	2003-04-21 15:18:06.000000000 +0200
+++ libdvdnav-0.1.10/src/dvd_types.h	2008-01-23 06:11:52.000000000 +0100
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2000, 2001 Björn Englund, Håkan Hjort
+ * Copyright (C) 2000, 2001 BjÃ¶rn Englund, HÃ¥kan Hjort
  *
  * This file is part of libdvdnav, a DVD navigation library. It is a modified
  * file originally part of the Ogle DVD player project.
@@ -17,9 +17,6 @@
  * You should have received a copy of the GNU General Public License
  * along with this program; if not, write to the Free Software
  * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
- *
- * $Id: dvd_types.h,v 1.7 2003/04/21 13:18:06 mroi Exp $
- *
  */
 
 /*
diff -Naur libdvdnav-0.1.10-org/src/highlight.c libdvdnav-0.1.10/src/highlight.c
--- libdvdnav-0.1.10-org/src/highlight.c	2004-01-20 02:22:24.000000000 +0100
+++ libdvdnav-0.1.10/src/highlight.c	2008-03-28 15:24:50.000000000 +0100
@@ -16,9 +16,6 @@
  * You should have received a copy of the GNU General Public License
  * along with this program; if not, write to the Free Software
  * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
- *
- * $Id: highlight.c,v 1.32 2004/01/20 01:22:24 jcdutton Exp $
- *
  */
 
 #ifdef HAVE_CONFIG_H
diff -Naur libdvdnav-0.1.10-org/src/navigation.c libdvdnav-0.1.10/src/navigation.c
--- libdvdnav-0.1.10-org/src/navigation.c	2004-01-07 20:34:28.000000000 +0100
+++ libdvdnav-0.1.10/src/navigation.c	2008-03-28 15:24:50.000000000 +0100
@@ -16,9 +16,6 @@
  * You should have received a copy of the GNU General Public License
  * along with this program; if not, write to the Free Software
  * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
- *
- * $Id: navigation.c,v 1.21 2004/01/07 19:34:28 mroi Exp $
- *
  */
 
 #ifdef HAVE_CONFIG_H
@@ -60,8 +57,8 @@
     printerr("Passed a NULL pointer.");
     return DVDNAV_STATUS_ERR;
   }
-  if(!this->started) {
-    printerr("Virtual DVD machine not started.");
+  if (!this->vm->vmgi) {
+    printerr("Bad VM state.");
     return DVDNAV_STATUS_ERR;
   }
 
@@ -75,8 +72,8 @@
     printerr("Passed a NULL pointer.");
     return DVDNAV_STATUS_ERR;
   }
-  if(!this->started) {
-    printerr("Virtual DVD machine not started.");
+  if (!this->vm->vmgi) {
+    printerr("Bad VM state.");
     return DVDNAV_STATUS_ERR;
   }
   if ((title < 1) || (title > vm_get_vmgi(this->vm)->tt_srpt->nr_of_srpts) ) {
@@ -103,6 +100,11 @@
     pthread_mutex_unlock(&this->vm_lock);
     return DVDNAV_STATUS_ERR;
   }
+  if (!this->started) {
+    printerr("Virtual DVD machine not started.");
+    pthread_mutex_unlock(&this->vm_lock);
+    return DVDNAV_STATUS_ERR;
+  }
   if (!this->vm->state.pgc) {
     printerr("No current PGC.");
     pthread_mutex_unlock(&this->vm_lock);
@@ -150,6 +152,11 @@
     pthread_mutex_unlock(&this->vm_lock);
     return DVDNAV_STATUS_ERR;
   }
+  if (!this->started) {
+    /* don't report an error but be nice */
+    vm_start(this->vm);
+    this->started = 1;
+  }
   if (!this->vm->state.pgc) {
     printerr("No current PGC.");
     pthread_mutex_unlock(&this->vm_lock);
diff -Naur libdvdnav-0.1.10-org/src/read_cache.c libdvdnav-0.1.10/src/read_cache.c
--- libdvdnav-0.1.10-org/src/read_cache.c	2004-03-03 17:48:36.000000000 +0100
+++ libdvdnav-0.1.10/src/read_cache.c	2008-03-28 15:24:50.000000000 +0100
@@ -17,9 +17,6 @@
  * You should have received a copy of the GNU General Public License
  * along with this program; if not, write to the Free Software
  * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
- *
- * $Id: read_cache.c,v 1.30 2004/03/03 16:48:36 mroi Exp $
- *
  */
 /*
  * There was a multithreaded read ahead cache in here for some time, but
diff -Naur libdvdnav-0.1.10-org/src/read_cache.h libdvdnav-0.1.10/src/read_cache.h
--- libdvdnav-0.1.10-org/src/read_cache.h	2002-07-12 17:46:44.000000000 +0200
+++ libdvdnav-0.1.10/src/read_cache.h	2008-01-23 06:11:52.000000000 +0100
@@ -16,9 +16,6 @@
  * You should have received a copy of the GNU General Public License
  * along with this program; if not, write to the Free Software
  * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
- *
- * $Id: read_cache.h,v 1.4 2002/07/12 15:46:44 mroi Exp $
- *
  */
 
 #ifndef __DVDNAV_READ_CACHE_H
diff -Naur libdvdnav-0.1.10-org/src/remap.c libdvdnav-0.1.10/src/remap.c
--- libdvdnav-0.1.10-org/src/remap.c	2003-08-27 15:54:19.000000000 +0200
+++ libdvdnav-0.1.10/src/remap.c	2008-03-07 15:19:43.000000000 +0100
@@ -14,22 +14,23 @@
  * You should have received a copy of the GNU General Public License
  * along with this program; if not, write to the Free Software
  * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
- *
- * $Id: remap.c,v 1.4 2003/08/27 13:54:19 mroi Exp $
  */
 
 #include <stdlib.h>
 #include <string.h>
 #include <stdio.h>
 
-#ifndef _MSC_VER 
+#ifdef HAVE_SYS_PARAM_H
 #include <sys/param.h>
+#endif
+
+#ifdef HAVE_SYS_FCNTL_H
 #include <sys/fcntl.h>
 #else
 #ifndef MAXPATHLEN
 #define MAXPATHLEN 255
 #endif
-#endif /* _MSC_VER */
+#endif /* HAVE fcntl.h */
 
 #include <assert.h>
 #include "remap.h"
@@ -190,10 +191,7 @@
 
     /* Build the map filename */
     home = getenv("HOME"); assert(home);
-    strncpy(fname, home, sizeof(fname));
-    strncat(fname, "/.dvdnav/", sizeof(fname));
-    strncat(fname, title, sizeof(fname));
-    strncat(fname, ".map", sizeof(fname));
+    snprintf (fname, sizeof(fname), "%s/.dvdnav/%s.map", home, title);
 
     /* Open the map file */
     fp = fopen( fname, "r");
diff -Naur libdvdnav-0.1.10-org/src/remap.h libdvdnav-0.1.10/src/remap.h
--- libdvdnav-0.1.10-org/src/remap.h	2003-02-20 16:32:19.000000000 +0100
+++ libdvdnav-0.1.10/src/remap.h	2008-01-23 06:11:52.000000000 +0100
@@ -14,8 +14,6 @@
  * You should have received a copy of the GNU General Public License
  * along with this program; if not, write to the Free Software
  * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
- *
- * $Id: remap.h,v 1.2 2003/02/20 15:32:19 mroi Exp $
  */
 
 #ifndef __REMAP__H
diff -Naur libdvdnav-0.1.10-org/src/searching.c libdvdnav-0.1.10/src/searching.c
--- libdvdnav-0.1.10-org/src/searching.c	2004-01-07 20:35:12.000000000 +0100
+++ libdvdnav-0.1.10/src/searching.c	2008-03-28 15:24:50.000000000 +0100
@@ -16,9 +16,6 @@
  * You should have received a copy of the GNU General Public License
  * along with this program; if not, write to the Free Software
  * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
- *
- * $Id: searching.c,v 1.35 2004/01/07 19:35:12 mroi Exp $
- *
  */
 
 #ifdef HAVE_CONFIG_H
@@ -27,6 +24,7 @@
 
 #include <assert.h>
 #include "dvdnav_internal.h"
+#include "dvdnav.h"
 
 /*
 #define LOG_DEBUG
@@ -34,12 +32,6 @@
 
 /* Searching API calls */
 
-dvdnav_status_t dvdnav_time_search(dvdnav_t *this,
-				   uint64_t time) {
-  /* FIXME: Time search the current PGC based on the xxx table */
-  return DVDNAV_STATUS_OK;
-}
-
 /* Scan the ADMAP for a particular block number. */
 /* Return placed in vobu. */
 /* Returns error status */
@@ -101,6 +93,86 @@
   return DVDNAV_STATUS_ERR;
 }
 
+dvdnav_status_t dvdnav_time_search(dvdnav_t *this,
+				   uint64_t time) {
+  
+  uint64_t target = time;
+  uint64_t length = 0;
+  uint32_t first_cell_nr, last_cell_nr, cell_nr;
+  int32_t found;
+  cell_playback_t *cell;
+  dvd_state_t *state;
+
+  if(this->position_current.still != 0) {
+    printerr("Cannot seek in a still frame.");
+    return DVDNAV_STATUS_ERR;
+  }
+  
+  pthread_mutex_lock(&this->vm_lock);
+  state = &(this->vm->state);
+  if(!state->pgc) {
+    printerr("No current PGC.");
+    pthread_mutex_unlock(&this->vm_lock);
+    return DVDNAV_STATUS_ERR;
+  }
+
+  
+  if (this->pgc_based) {
+    first_cell_nr = 1;
+    last_cell_nr = state->pgc->nr_of_cells;
+  } else {
+    /* Find start cell of program. */
+    first_cell_nr = state->pgc->program_map[state->pgN-1];
+    /* Find end cell of program */
+    if(state->pgN < state->pgc->nr_of_programs)
+      last_cell_nr = state->pgc->program_map[state->pgN] - 1;
+    else
+      last_cell_nr = state->pgc->nr_of_cells;
+  }
+
+  found = 0;
+  for(cell_nr = first_cell_nr; (cell_nr <= last_cell_nr) && !found; cell_nr ++) {
+    cell =  &(state->pgc->cell_playback[cell_nr-1]);
+    length = dvdnav_convert_time(&cell->playback_time);
+    if (target >= length) {
+      target -= length;
+    } else {
+      /* FIXME: there must be a better way than interpolation */
+      target = target * (cell->last_sector - cell->first_sector + 1) / length;
+      target += cell->first_sector;
+      
+      found = 1;
+      break;
+    }
+  }
+
+  if(found) {
+    int32_t vobu;
+#ifdef LOG_DEBUG
+    fprintf(MSG_OUT, "libdvdnav: Seeking to cell %i from choice of %i to %i\n",
+	    cell_nr, first_cell_nr, last_cell_nr);
+#endif
+    if (dvdnav_scan_admap(this, state->domain, target, &vobu) == DVDNAV_STATUS_OK) {
+      int32_t start = state->pgc->cell_playback[cell_nr-1].first_sector;
+      
+      if (vm_jump_cell_block(this->vm, cell_nr, vobu - start)) {
+#ifdef LOG_DEBUG
+        fprintf(MSG_OUT, "libdvdnav: After cellN=%u blockN=%u target=%x vobu=%x start=%x\n" ,
+          state->cellN, state->blockN, target, vobu, start);
+#endif
+        this->vm->hop_channel += HOP_SEEK;
+        pthread_mutex_unlock(&this->vm_lock);
+        return DVDNAV_STATUS_OK;
+      }
+    }
+  }
+  
+  fprintf(MSG_OUT, "libdvdnav: Error when seeking\n");
+  printerr("Error when seeking.");
+  pthread_mutex_unlock(&this->vm_lock);
+  return DVDNAV_STATUS_ERR;
+}
+
 dvdnav_status_t dvdnav_sector_search(dvdnav_t *this,
 				     uint64_t offset, int32_t origin) {
   uint32_t target = 0;
diff -Naur libdvdnav-0.1.10-org/src/settings.c libdvdnav-0.1.10/src/settings.c
--- libdvdnav-0.1.10-org/src/settings.c	2003-12-31 22:37:16.000000000 +0100
+++ libdvdnav-0.1.10/src/settings.c	2008-03-28 15:24:50.000000000 +0100
@@ -16,9 +16,6 @@
  * You should have received a copy of the GNU General Public License
  * along with this program; if not, write to the Free Software
  * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
- *
- * $Id: settings.c,v 1.9 2003/12/31 21:37:16 jcdutton Exp $
- *
  */
 
 #ifdef HAVE_CONFIG_H
diff -Naur libdvdnav-0.1.10-org/src/vm/decoder.c libdvdnav-0.1.10/src/vm/decoder.c
--- libdvdnav-0.1.10-org/src/vm/decoder.c	2004-03-03 17:50:42.000000000 +0100
+++ libdvdnav-0.1.10/src/vm/decoder.c	2008-03-28 15:24:50.000000000 +0100
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2000, 2001 Martin Norbäck, Håkan Hjort
+ * Copyright (C) 2000, 2001 Martin NorbÃ¤ck, HÃ¥kan Hjort
  *               2002-2004 the dvdnav project
  * 
  * This file is part of libdvdnav, a DVD navigation library. It is modified
@@ -18,9 +18,6 @@
  * You should have received a copy of the GNU General Public License
  * along with this program; if not, write to the Free Software
  * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
- *
- * $Id: decoder.c,v 1.2 2004/03/03 16:50:42 mroi Exp $
- *
  */
 
 #ifdef HAVE_CONFIG_H
diff -Naur libdvdnav-0.1.10-org/src/vm/decoder.h libdvdnav-0.1.10/src/vm/decoder.h
--- libdvdnav-0.1.10-org/src/vm/decoder.h	2004-01-11 22:43:13.000000000 +0100
+++ libdvdnav-0.1.10/src/vm/decoder.h	2008-01-23 06:11:52.000000000 +0100
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2000, 2001 Martin Norbäck, Håkan Hjort
+ * Copyright (C) 2000, 2001 Martin NorbÃ¤ck, HÃ¥kan Hjort
  * 
  * This file is part of libdvdnav, a DVD navigation library. It is modified
  * from a file originally part of the Ogle DVD player.
@@ -17,9 +17,6 @@
  * You should have received a copy of the GNU General Public License
  * along with this program; if not, write to the Free Software
  * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
- *
- * $Id: decoder.h,v 1.1 2004/01/11 21:43:13 mroi Exp $
- *
  */
 
 #ifndef DECODER_H_INCLUDED
diff -Naur libdvdnav-0.1.10-org/src/vm/vm.c libdvdnav-0.1.10/src/vm/vm.c
--- libdvdnav-0.1.10-org/src/vm/vm.c	2004-05-21 21:32:25.000000000 +0200
+++ libdvdnav-0.1.10/src/vm/vm.c	2008-03-28 15:24:50.000000000 +0100
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2000, 2001 Håkan Hjort
+ * Copyright (C) 2000, 2001 HÃ¥kan Hjort
  * Copyright (C) 2001 Rich Wareham <richwareham@users.sourceforge.net>
  *               2002-2004 the dvdnav project
  * 
@@ -19,9 +19,6 @@
  * You should have received a copy of the GNU General Public License
  * along with this program; if not, write to the Free Software
  * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
- *
- * $Id: vm.c,v 1.6 2004/05/21 19:32:25 mroi Exp $
- *
  */
 
 #ifdef HAVE_CONFIG_H
@@ -184,9 +181,9 @@
   }
 }
 
-static void ifoOpenNewVTSI(vm_t *vm, dvd_reader_t *dvd, int vtsN) {
+static int ifoOpenNewVTSI(vm_t *vm, dvd_reader_t *dvd, int vtsN) {
   if((vm->state).vtsN == vtsN) {
-    return; /*  We alread have it */
+    return 1; /*  We alread have it */
   }
   
   if(vm->vtsi != NULL)
@@ -194,30 +191,32 @@
   
   vm->vtsi = ifoOpenVTSI(dvd, vtsN);
   if(vm->vtsi == NULL) {
-    fprintf(MSG_OUT, "libdvdnav: ifoOpenVTSI failed - CRASHING!!!\n");
-    assert(0);
+    fprintf(MSG_OUT, "libdvdnav: ifoOpenVTSI failed\n");
+    return 0;
   }
   if(!ifoRead_VTS_PTT_SRPT(vm->vtsi)) {
-    fprintf(MSG_OUT, "libdvdnav: ifoRead_VTS_PTT_SRPT failed - CRASHING!!!\n");
-    assert(0);
+    fprintf(MSG_OUT, "libdvdnav: ifoRead_VTS_PTT_SRPT failed\n");
+    return 0;
   }
   if(!ifoRead_PGCIT(vm->vtsi)) {
-    fprintf(MSG_OUT, "libdvdnav: ifoRead_PGCIT failed - CRASHING!!!\n");
-    assert(0);
+    fprintf(MSG_OUT, "libdvdnav: ifoRead_PGCIT failed\n");
+    return 0;
   }
   if(!ifoRead_PGCI_UT(vm->vtsi)) {
-    fprintf(MSG_OUT, "libdvdnav: ifoRead_PGCI_UT failed - CRASHING!!!\n");
-    assert(0);
+    fprintf(MSG_OUT, "libdvdnav: ifoRead_PGCI_UT failed\n");
+    return 0;
   }
   if(!ifoRead_VOBU_ADMAP(vm->vtsi)) {
-    fprintf(MSG_OUT, "libdvdnav: ifoRead_VOBU_ADMAP vtsi failed - CRASHING\n");
-    assert(0);
+    fprintf(MSG_OUT, "libdvdnav: ifoRead_VOBU_ADMAP vtsi failed\n");
+    return 0;
   }
   if(!ifoRead_TITLE_VOBU_ADMAP(vm->vtsi)) {
-    fprintf(MSG_OUT, "libdvdnav: ifoRead_TITLE_VOBU_ADMAP vtsi failed - CRASHING\n");
-    assert(0);
+    fprintf(MSG_OUT, "libdvdnav: ifoRead_TITLE_VOBU_ADMAP vtsi failed\n");
+    return 0;
   }
   (vm->state).vtsN = vtsN;
+  
+  return 1;
 }
 
 
@@ -253,10 +252,11 @@
 
 /* Basic Handling */
 
-void vm_start(vm_t *vm) {
+int vm_start(vm_t *vm) {
   /* Set pgc to FP (First Play) pgc */
   set_FP_PGC(vm);
   process_command(vm, play_PGC(vm));
+  return !vm->stopped;
 }
 
 void vm_stop(vm_t *vm) {
@@ -382,7 +382,8 @@
   vtsN = (target->state).vtsN;
   if (vtsN > 0) {
     (target->state).vtsN = 0;
-    ifoOpenNewVTSI(target, target->dvd, vtsN);
+    if (!ifoOpenNewVTSI(target, target->dvd, vtsN))
+      assert(0);
   
     /* restore pgc pointer into the new vtsi */
     if (!set_PGCN(target, pgcN))
@@ -712,8 +713,8 @@
     }
   }
   
- if((vm->state).domain != VTS_DOMAIN && streamN == -1)
-   streamN = 0;
+  if((vm->state).domain != VTS_DOMAIN && streamN == -1)
+    streamN = 0;
 
   /* FIXME: Should also check in vtsi/vmgi status what kind of stream it is. */
   return streamN;
@@ -1280,9 +1281,10 @@
       if(link_values.data1 != 0)
 	(vm->state).HL_BTNN_REG = link_values.data1 << 10;
       assert((vm->state).pgc->next_pgc_nr != 0);
-      if(!set_PGCN(vm, (vm->state).pgc->next_pgc_nr))
-	assert(0);
-      link_values = play_PGC(vm);
+      if(set_PGCN(vm, (vm->state).pgc->next_pgc_nr))
+	link_values = play_PGC(vm);
+      else
+	link_values.command = Exit;
       break;
     case LinkPrevPGC:
       /* Link to Previous Program Chain */
@@ -1290,9 +1292,10 @@
       if(link_values.data1 != 0)
 	(vm->state).HL_BTNN_REG = link_values.data1 << 10;
       assert((vm->state).pgc->prev_pgc_nr != 0);
-      if(!set_PGCN(vm, (vm->state).pgc->prev_pgc_nr))
-	assert(0);
-      link_values = play_PGC(vm);
+      if(set_PGCN(vm, (vm->state).pgc->prev_pgc_nr))
+	link_values = play_PGC(vm);
+      else
+	link_values.command = Exit;
       break;
     case LinkGoUpPGC:
       /* Link to GoUp Program Chain */
@@ -1300,9 +1303,10 @@
       if(link_values.data1 != 0)
 	(vm->state).HL_BTNN_REG = link_values.data1 << 10;
       assert((vm->state).pgc->goup_pgc_nr != 0);
-      if(!set_PGCN(vm, (vm->state).pgc->goup_pgc_nr))
-	assert(0);
-      link_values = play_PGC(vm);
+      if(set_PGCN(vm, (vm->state).pgc->goup_pgc_nr))
+	link_values = play_PGC(vm);
+      else
+	link_values.command = Exit;
       break;
     case LinkTailPGC:
       /* Link to Tail of Program Chain */
@@ -1325,7 +1329,8 @@
 	}
 	
 	(vm->state).domain = VTS_DOMAIN;
-	ifoOpenNewVTSI(vm, vm->dvd, (vm->state).rsm_vtsN);
+	if (!ifoOpenNewVTSI(vm, vm->dvd, (vm->state).rsm_vtsN))
+	  assert(0);
 	set_PGCN(vm, (vm->state).rsm_pgcN);
 	
 	/* These should never be set in SystemSpace and/or MenuSpace */ 
@@ -1343,10 +1348,11 @@
 	  (vm->state).pgN = 1;
 	  link_values = play_PG(vm);
 	} else { 
-	  /* (vm->state).pgN = ?? this gets the righ value in set_PGN() below */
+	  /* (vm->state).pgN = ?? this gets the right value in set_PGN() below */
 	  (vm->state).cellN = (vm->state).rsm_cellN;
 	  link_values.command = PlayThis;
-	  link_values.data1 = (vm->state).rsm_blockN;
+	  link_values.data1 = (vm->state).rsm_blockN & 0xffff;
+	  link_values.data2 = (vm->state).rsm_blockN >> 16;
 	  if(!set_PGN(vm)) {
 	    /* Were at the end of the PGC, should not happen for a RSM */
 	    assert(0);
@@ -1403,9 +1409,10 @@
       /* Stop SPRM9 Timer */
       /* Set SPRM1 and SPRM2 */
       assert((vm->state).domain == VMGM_DOMAIN || (vm->state).domain == FP_DOMAIN); /* ?? */
-      if(!set_TT(vm, link_values.data1))
-	assert(0);
-      link_values = play_PGC(vm);
+      if(set_TT(vm, link_values.data1))
+        link_values = play_PGC(vm);
+      else
+	link_values.command = Exit;
       break;
     case JumpVTS_TT:
       /* Jump to Title:data1 in same VTS Title Domain */
@@ -1462,7 +1469,8 @@
 	  /* the normal case */
 	  assert((vm->state).domain == VMGM_DOMAIN || (vm->state).domain == FP_DOMAIN); /* ?? */
 	  (vm->state).domain = VTSM_DOMAIN;
-	  ifoOpenNewVTSI(vm, vm->dvd, link_values.data1);  /* Also sets (vm->state).vtsN */
+	  if (!ifoOpenNewVTSI(vm, vm->dvd, link_values.data1))  /* Also sets (vm->state).vtsN */
+	    assert(0);
 	} else {
 	  /* This happens on some discs like "Captain Scarlet & the Mysterons" or
 	   * the German RC2 of "Anatomie" in VTSM. */
@@ -1549,7 +1557,7 @@
 #endif
     
   }
-  (vm->state).blockN = link_values.data1;
+  (vm->state).blockN = link_values.data1 | (link_values.data2 << 16);
   return 1;
 }
 
@@ -1575,8 +1583,9 @@
   
   (vm->state).domain = VTS_DOMAIN;
 
-  if(vtsN != (vm->state).vtsN)
-    ifoOpenNewVTSI(vm, vm->dvd, vtsN);  /* Also sets (vm->state).vtsN */
+  if (vtsN != (vm->state).vtsN)
+    if (!ifoOpenNewVTSI(vm, vm->dvd, vtsN))  /* Also sets (vm->state).vtsN */
+      return 0;
   
   if ((vts_ttn < 1) || (vts_ttn > vm->vtsi->vts_ptt_srpt->nr_of_srpts) ||
       (part < 1) || (part > vm->vtsi->vts_ptt_srpt->title[vts_ttn - 1].nr_of_ptts) ) {
@@ -1601,6 +1610,9 @@
 
 static int set_FP_PGC(vm_t *vm) {  
   (vm->state).domain = FP_DOMAIN;
+  if (!vm->vmgi->first_play_pgc) {
+    return set_PGCN(vm, 1);
+  }
   (vm->state).pgc = vm->vmgi->first_play_pgc;
   (vm->state).pgcN = vm->vmgi->vmgi_mat->first_play_pgc;
   return 1;
diff -Naur libdvdnav-0.1.10-org/src/vm/vmcmd.c libdvdnav-0.1.10/src/vm/vmcmd.c
--- libdvdnav-0.1.10-org/src/vm/vmcmd.c	2004-03-03 17:50:42.000000000 +0100
+++ libdvdnav-0.1.10/src/vm/vmcmd.c	2008-03-28 15:24:50.000000000 +0100
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2000, 2001 Martin Norbäck, Håkan Hjort
+ * Copyright (C) 2000, 2001 Martin NorbÃ¤ck, HÃ¥kan Hjort
  *               2002-2004 the dvdnav project
  * 
  * This file is part of libdvdnav, a DVD navigation library. It is modified
@@ -18,9 +18,6 @@
  * You should have received a copy of the GNU General Public License
  * along with this program; if not, write to the Free Software
  * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
- *
- * $Id: vmcmd.c,v 1.2 2004/03/03 16:50:42 mroi Exp $
- *
  */
 
 #ifdef HAVE_CONFIG_H
diff -Naur libdvdnav-0.1.10-org/src/vm/vmcmd.h libdvdnav-0.1.10/src/vm/vmcmd.h
--- libdvdnav-0.1.10-org/src/vm/vmcmd.h	2004-01-11 22:43:13.000000000 +0100
+++ libdvdnav-0.1.10/src/vm/vmcmd.h	2008-01-23 06:11:52.000000000 +0100
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2000, 2001 Martin Norbäck, Håkan Hjort
+ * Copyright (C) 2000, 2001 Martin NorbÃ¤ck, HÃ¥kan Hjort
  * 
  * This file is part of libdvdnav, a DVD navigation library. It is modified
  * from a file originally part of the Ogle DVD player.
@@ -17,9 +17,6 @@
  * You should have received a copy of the GNU General Public License
  * along with this program; if not, write to the Free Software
  * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
- *
- * $Id: vmcmd.h,v 1.1 2004/01/11 21:43:13 mroi Exp $
- *
  */
 
 #ifndef VMCMD_H_INCLUDED
diff -Naur libdvdnav-0.1.10-org/src/vm/vm.h libdvdnav-0.1.10/src/vm/vm.h
--- libdvdnav-0.1.10-org/src/vm/vm.h	2004-01-11 22:43:13.000000000 +0100
+++ libdvdnav-0.1.10/src/vm/vm.h	2008-01-23 06:11:52.000000000 +0100
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2000, 2001 Håkan Hjort
+ * Copyright (C) 2000, 2001 HÃ¥kan Hjort
  * Copyright (C) 2001 Rich Wareham <richwareham@users.sourceforge.net>
  * 
  * This file is part of libdvdnav, a DVD navigation library. It is modified
@@ -18,9 +18,6 @@
  * You should have received a copy of the GNU General Public License
  * along with this program; if not, write to the Free Software
  * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
- *
- * $Id: vm.h,v 1.1 2004/01/11 21:43:13 mroi Exp $
- *
  */
 
 #ifndef VM_H_INCLUDED
@@ -127,7 +124,7 @@
 dvd_reader_t *vm_get_dvd_reader(vm_t *vm);
 
 /* Basic Handling */
-void vm_start(vm_t *vm);
+int  vm_start(vm_t *vm);
 void vm_stop(vm_t *vm);
 int  vm_reset(vm_t *vm, const char *dvdroot);
 
diff -Naur libdvdnav-0.1.10-org/configure.ac libdvdnav-0.1.10/configure.ac
--- libdvdnav-0.1.10-org/configure.ac	2004-06-10 23:13:02.000000000 +0200
+++ libdvdnav-0.1.10/configure.ac	2008-04-19 21:29:04.000000000 +0200
@@ -13,9 +13,9 @@
 dnl --------------------------------------------------------------
 dnl Making releases: DVDNAV_SUB += 1; change LT_* accordingly
 dnl --------------------------------------------------------------
-DVDNAV_MAJOR=0
+DVDNAV_MAJOR=1
 DVDNAV_MINOR=1
-DVDNAV_SUB=10
+DVDNAV_SUB=12
 DVDNAV_PRE=""
 
 AC_SUBST(DVDNAV_MAJOR)
