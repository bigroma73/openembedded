--- mISDN.org/drivers/isdn/hardware/mISDN/hfcs_usb.c	2005-06-23 18:43:36.000000000 +0200
+++ mISDN/drivers/isdn/hardware/mISDN/hfcs_usb.c	2005-08-12 16:16:24.000000000 +0200
@@ -2038,9 +2038,9 @@
 
 	vend_idx = 0xffff;
 	for (i = 0; hfcsusb_idtab[i].idVendor; i++) {
-		if (dev->descriptor.idVendor == hfcsusb_idtab[i].idVendor
+		if (dev->descriptor.idVendor == le16_to_cpu(hfcsusb_idtab[i].idVendor)
 		    && dev->descriptor.idProduct ==
-		    hfcsusb_idtab[i].idProduct) {
+		    le16_to_cpu(hfcsusb_idtab[i].idProduct)) {
 			vend_idx = i;
 			continue;
 		}
@@ -2160,8 +2160,8 @@
 							    usb_transfer_mode
 							    = USB_INT;
 							packet_size =
-							    ep->desc.
-							    wMaxPacketSize;
+							    le16_to_cpu(ep->desc.
+							    wMaxPacketSize);
 							break;
 						case USB_ENDPOINT_XFER_BULK:
 							if (ep_addr & 0x80)
@@ -2189,8 +2189,8 @@
 							    usb_transfer_mode
 							    = USB_BULK;
 							packet_size =
-							    ep->desc.
-							    wMaxPacketSize;
+							    le16_to_cpu(ep->desc.
+							    wMaxPacketSize);
 							break;
 						case USB_ENDPOINT_XFER_ISOC:
 							if (ep_addr & 0x80)
@@ -2218,8 +2218,8 @@
 							    usb_transfer_mode
 							    = USB_ISOC;
 							iso_packet_size =
-							    ep->desc.
-							    wMaxPacketSize;
+							    le16_to_cpu(ep->desc.
+							    wMaxPacketSize);
 							break;
 						default:
 							card->
@@ -2234,8 +2234,8 @@
 						    card;
 						card->fifos[cidx].
 						    usb_packet_maxlen =
-						    ep->desc.
-						    wMaxPacketSize;
+						    le16_to_cpu(ep->desc.
+						    wMaxPacketSize);
 						card->fifos[cidx].
 						    intervall =
 						    ep->desc.bInterval;
