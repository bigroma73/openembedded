--- R-2.0.0/configure~	2004-12-11 00:34:27.270027696 +0000
+++ R-2.0.0/configure	2004-12-10 23:06:11.000000000 +0000
@@ -20960,41 +20960,41 @@
 
 ### * Checks for libraries.
 
-## Set up LD_LIBRARY_PATH or equivalent.
-## <FIXME>
-## What is this doing *HERE*?
-## Should be needed for tests using AC_RUN_IFELSE()?
-## Make sure that non-standard directories specified via '-L' are really
-## searched in the tests.
-## Note: earlier versions used LIBS rather than LDFLAGS.
-for arg in ${LDFLAGS}; do
-  case "${arg}" in
-    -L*)
-      lib=`echo ${arg} | sed "s/^-L//"`
-      separator="${PATH_SEPARATOR}"
-test -z "${separator}" && separator=" "
-if test -z "${R_LD_LIBRARY_PATH}"; then
-  R_LD_LIBRARY_PATH="${lib}"
-else
-  R_LD_LIBRARY_PATH="${R_LD_LIBRARY_PATH}${separator}${lib}"
-fi
-      ;;
-  esac
-done
-## </FIXME>
-
-## Record name of environment variable which tells the dynamic linker
-## where to find shlibs (typically, 'LD_LIBRARY_PATH').
-ltout=`./libtool --config | grep '^shlibpath_var='`
-eval "${ltout}"
-
-## Export LD_LIBRARY_PATH or equivalent.
-if eval "test -z \"\${${shlibpath_var}}\""; then
-  eval "${shlibpath_var}=\"${R_LD_LIBRARY_PATH}\""
-else
-  eval "${shlibpath_var}=\"${R_LD_LIBRARY_PATH}${PATH_SEPARATOR}\${${shlibpath_var}}\""
-fi
-eval "export ${shlibpath_var}"
+### Set up LD_LIBRARY_PATH or equivalent.
+### <FIXME>
+### What is this doing *HERE*?
+### Should be needed for tests using AC_RUN_IFELSE()?
+### Make sure that non-standard directories specified via '-L' are really
+### searched in the tests.
+### Note: earlier versions used LIBS rather than LDFLAGS.
+#for arg in ${LDFLAGS}; do
+#  case "${arg}" in
+#    -L*)
+#      lib=`echo ${arg} | sed "s/^-L//"`
+#      separator="${PATH_SEPARATOR}"
+#test -z "${separator}" && separator=" "
+#if test -z "${R_LD_LIBRARY_PATH}"; then
+#  R_LD_LIBRARY_PATH="${lib}"
+#else
+#  R_LD_LIBRARY_PATH="${R_LD_LIBRARY_PATH}${separator}${lib}"
+#fi
+#      ;;
+#  esac
+#done
+### </FIXME>
+
+### Record name of environment variable which tells the dynamic linker
+### where to find shlibs (typically, 'LD_LIBRARY_PATH').
+#ltout=`./libtool --config | grep '^shlibpath_var='`
+#eval "${ltout}"
+#
+### Export LD_LIBRARY_PATH or equivalent.
+#if eval "test -z \"\${${shlibpath_var}}\""; then
+#  eval "${shlibpath_var}=\"${R_LD_LIBRARY_PATH}\""
+#else
+#  eval "${shlibpath_var}=\"${R_LD_LIBRARY_PATH}${PATH_SEPARATOR}\${${shlibpath_var}}\""
+#fi
+#eval "export ${shlibpath_var}"
 
 ## Yes, we already need this at configure time ...
 case "${host_os}" in
@@ -26334,6 +26334,9 @@
 
 fi
 
+#<Cross-compile addition>
+r_cv_prog_f77_can_run=yes
+#</Cross-compile Addition>
 
 echo "$as_me:$LINENO: checking whether mixed C/Fortran code can be run" >&5
 echo $ECHO_N "checking whether mixed C/Fortran code can be run... $ECHO_C" >&6
@@ -26393,6 +26396,9 @@
    { (exit 1); exit 1; }; }
 fi
 
+#<Cross-compile addition>
+r_cv_prog_f77_cc_compat=yes
+#</Cross-compile Addition>
 
 echo "$as_me:$LINENO: checking whether ${F77} and ${CC} agree on int and double" >&5
 echo $ECHO_N "checking whether ${F77} and ${CC} agree on int and double... $ECHO_C" >&6
