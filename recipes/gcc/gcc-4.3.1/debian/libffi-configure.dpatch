#! /bin/sh -e

# DP: Add --enable-libffi option to toplevel configure script

dir=
if [ $# -eq 3 -a "$2" = '-d' ]; then
    pdir="-d $3"
    dir="$3/"
elif [ $# -ne 1 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch)
        patch $pdir -f --no-backup-if-mismatch -p0 < $0
        cd ${dir} && autoconf
        ;;
    -unpatch)
        patch $pdir -f --no-backup-if-mismatch -R -p0 < $0
        ;;
    *)
        echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
        exit 1
esac
exit 0

--- configure.ac.orig	2007-08-27 13:42:57.000000000 +0200
+++ configure.ac	2007-09-01 15:57:19.664811738 +0200
@@ -347,6 +347,16 @@
 ENABLE_LIBSSP=$enableval,
 ENABLE_LIBSSP=yes)
 
+AC_ARG_ENABLE(libffi,
+[  --enable-libffi         build libffi directory],
+ENABLE_LIBFFI=$enableval,
+ENABLE_LIBFFI=yes)
+if test "${ENABLE_LIBFFI}" != "yes" ; then
+  noconfigdirs="$noconfigdirs target-libffi"
+else
+  libgcj="`echo $libgcj | sed 's/target-libffi *//'`"
+fi
+
 # Save it here so that, even in case of --enable-libgcj, if the Java
 # front-end isn't enabled, we still get libgcj disabled.
 libgcj_saved=$libgcj
