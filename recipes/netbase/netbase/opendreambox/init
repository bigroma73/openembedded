#!/bin/sh
#
# manage network interfaces and configure some networking options

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

if ! [ -x /sbin/ifup ]; then
    exit 0
fi

spoofprotect_rp_filter () {
    # This is the best method: turn on Source Address Verification and get
    # spoof protection on all current and future interfaces.
    
    if [ -e /proc/sys/net/ipv4/conf/all/rp_filter ]; then
        for f in /proc/sys/net/ipv4/conf/*; do
	    [ -e $f/rp_filter ] && echo 1 > $f/rp_filter
        done
        return 0
    else
        return 1
    fi
}

spoofprotect () {
    echo -n "Setting up IP spoofing protection: "
    if spoofprotect_rp_filter; then
        echo "rp_filter."
    else
        echo "FAILED."
    fi
}

ip_forward () {
    if [ -e /proc/sys/net/ipv4/ip_forward ]; then
        echo -n "Enabling packet forwarding... "
        echo 1 > /proc/sys/net/ipv4/ip_forward
        echo "done."
    fi
}

syncookies () {
    if [ -e /proc/sys/net/ipv4/tcp_syncookies ]; then
        echo -n "Enabling TCP/IP SYN cookies... "
        echo 1 > /proc/sys/net/ipv4/tcp_syncookies
        echo "done."
    fi
}

PID=`pidof wpa_supplicant`
wpa_supplicantcheck () {
    if [ ! -z "$PID" ]; then
        echo -n "disabling wpa_supplicant "
        start-stop-daemon -K -x wpa_supplicant
        # HACK: wpa_supplicant sometimes doesn't quit properly on SIGTERM.
        if [ -e /var/run/wpa_supplicant ]; then
        	echo -n "wpa_supplicant still running, force kill now.. "
        	killall -9 /usr/sbin/wpa_supplicant
        	rm -rf /var/run/wpa_supplicant
        	echo "done."
    		fi
        echo "done."
    fi
}

doopt () {
    optname=$1
    default=$2
    opt=`grep "^$optname=" /etc/network/options`
    if [ -z "$opt" ]; then
        opt="$optname=$default"
    fi
    optval=${opt#$optname=}
    if [ "$optval" = "yes" ]; then
        eval $optname
    fi
}

remote_rootfs() {
    if sed -n 's/^[^ ]* \([^ ]*\) \([^ ]*\) .*$/\1 \2/p' /proc/mounts |
      grep -q "^/ nfs$"; then
        return 0
    elif sed -n 's/^[^ ]* \([^ ]*\) \([^ ]*\) .*$/\1 \2/p' /proc/mounts |
      grep -q "^/ smbfs$"; then
        return 0
    else
        return 1
    fi
}

case "$1" in
    start)
	# /etc/sysctl.conf is preferred
	if [ ! -f /etc/sysctl.conf ]; then
	  doopt spoofprotect yes
	  doopt syncookies no
	  doopt ip_forward no
	fi

        echo -n "Configuring network interfaces... "
	if remote_rootfs; then
	    ifup lo
	else
	    wpa_supplicantcheck
	    ifup -a
	fi
	echo "done."
	;;
    stop)
	if remote_rootfs; then
	    echo "NOT deconfiguring network interfaces: / is a remote filesystem"
	elif sed -n 's/^[^ ]* \([^ ]*\) \([^ ]*\) .*$/\2/p' /proc/mounts | 
          grep -qE '^(nfs|smbfs|ncp|coda)$'; then
            echo "NOT deconfiguring network interfaces: network shares still mounted."
        else
            echo -n "Deconfiguring network interfaces... "
            ifdown -a
            wpa_supplicantcheck
	    echo "done."
        fi
	;;
    force-reload|restart)
        echo -n "Reconfiguring network interfaces... "
        ifdown -a
        wpa_supplicantcheck
        ifup -a
	echo "done."
	;;
    *)
	echo "Usage: /etc/init.d/networking {start|stop|restart|force-reload}"
	exit 1
	;;
esac

exit 0

