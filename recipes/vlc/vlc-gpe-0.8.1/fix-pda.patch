--- vlc-0.8.1/modules/gui/pda/pda.c	2004-11-06 17:35:18.000000000 +0100
+++ vlc-0.8.1.mod/modules/gui/pda/pda.c	2005-03-11 13:56:52.000000000 +0100
@@ -417,11 +417,12 @@
     {
         input_thread_t *p_input = p_intf->p_sys->p_input;
 
-        vlc_mutex_lock( &p_input->stream.stream_lock );
+        vlc_mutex_lock( &p_input->object_lock );
         if( !p_input->b_die )
         {
-            /* New input or stream map change */
-            if( p_input->stream.b_changed )
+           /* New input or stream map change */
+/*            if( p_input->stream.b_changed )
+*/
             {
                 playlist_t *p_playlist;
 
@@ -445,11 +446,14 @@
             }
 
             /* Manage the slider */
-#define p_area p_input->stream.p_selected_area
+#if 0
+#define p_area p_input->p_selected_area
+
             if (p_intf->p_libvlc->i_cpu & CPU_CAPABILITY_FPU)
             {
                 /* Manage the slider for CPU_CAPABILITY_FPU hardware */
-                if( p_input->stream.b_seekable && p_intf->p_sys->b_playing )
+/*                if( p_input->stream.b_seekable && p_intf->p_sys->b_playing )*/
+		if (p_intf->p_sys->b_playing)
                 {
                     float newvalue = p_intf->p_sys->p_adj->value;
 
@@ -471,9 +475,9 @@
                         double f_pos = (double)newvalue / 100.0;
 
                         /* release the lock to be able to seek */
-                        vlc_mutex_unlock( &p_input->stream.stream_lock );
+                        vlc_mutex_unlock( &p_input->object_lock );
                         var_SetFloat( p_input, "position", f_pos );
-                        vlc_mutex_lock( &p_input->stream.stream_lock );
+                        vlc_mutex_lock( &p_input->object_lock );
 
                         /* Update the old value */
                         p_intf->p_sys->f_adj_oldvalue = newvalue;
@@ -483,7 +487,8 @@
             else
             {
                 /* Manage the slider without CPU_CAPABILITY_FPU hardware */
-                if( p_input->stream.b_seekable && p_intf->p_sys->b_playing )
+/*                if( p_input->stream.b_seekable && p_intf->p_sys->b_playing )*/
+		if (p_intf->p_sys->b_playing)
                 {
                     off_t newvalue = p_intf->p_sys->p_adj->value;
 
@@ -505,9 +510,9 @@
                         double f_pos = (double)newvalue / 100.0;
 
                         /* release the lock to be able to seek */
-                        vlc_mutex_unlock( &p_input->stream.stream_lock );
+                        vlc_mutex_unlock( &p_input->object_lock );
                         var_SetFloat( p_input, "position", f_pos );
-                        vlc_mutex_lock( &p_input->stream.stream_lock );
+                        vlc_mutex_lock( &p_input->object_lock );
 
                         /* Update the old value */
                         p_intf->p_sys->i_adj_oldvalue = newvalue;
@@ -515,8 +520,9 @@
                 }
             }
 #undef p_area
+#endif
         }
-        vlc_mutex_unlock( &p_input->stream.stream_lock );
+        vlc_mutex_unlock( &p_input->object_lock );
     }
     else if( p_intf->p_sys->b_playing && !p_intf->b_die )
     {
@@ -594,20 +600,14 @@
     if( p_intf->p_sys->p_input )
     {
         /* initialize and show slider for seekable streams */
-        if( p_intf->p_sys->p_input->stream.b_seekable )
+/*        if( p_intf->p_sys->p_input->stream.b_seekable )*/
         {
             gtk_widget_show( GTK_WIDGET( p_slider ) );
         }
-        else
-        {
-            /* hide slider */
-            gtk_widget_hide( GTK_WIDGET( p_slider ) );
-        }
-
         /* control buttons for free pace streams */
-        b_control = p_intf->p_sys->p_input->stream.b_pace_control;
+        b_control = p_intf->p_sys->p_input->b_can_pace_control;
 
-        p_intf->p_sys->p_input->stream.b_changed = 0;
+/*        p_intf->p_sys->p_input->stream.b_changed = 0;*/
         msg_Dbg( p_intf, "stream has changed, refreshing interface" );
     }
 
