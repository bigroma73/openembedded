Source: http://bugzilla.gnome.org/show_bug.cgi?id=522335

This patch fixes the following error.

| make[4]: Entering directory `/home/khem/oe/build/eglibc/tmp-qemuarm/work/armv5te-angstrom-linux-gnueabi/glib-2.0-2.16.1-r3/glib-2.16.1/glib'
| if ccache arm-angstrom-linux-gnueabi-gcc -march=armv5te -mtune=arm926ej-s -DHAVE_CONFIG_H -I. -I. -I..  -I..  -DG_LOG_DOMAIN=\"GLib\" -DG_DISABLE_CAST_CHECKS -DG_DISABLE_ASSERT -DG_DISABLE_CHECKS -DG_DISABLE_DEPRECATED -DGLIB_COMPILATION -DPCRE_STATIC -isystem/home/khem/oe/build/eglibc/tmp-qemuarm/staging/arm-angstrom-linux-gnueabi/usr/include -pthread  -isystem/home/khem/oe/build/eglibc/tmp-qemuarm/staging/arm-angstrom-linux-gnueabi/usr/include -fexpensive-optimizations -fomit-frame-pointer -frename-registers -Os -Wall -MT gtester.o -MD -MP -MF ".deps/gtester.Tpo" -c -o gtester.o gtester.c; \
| 	then mv -f ".deps/gtester.Tpo" ".deps/gtester.Po"; else rm -f ".deps/gtester.Tpo"; exit 1; fi
| gtester.c: In function 'launch_test_binary':
| gtester.c:276: error: 'ARG_MAX' undeclared (first use in this function)
| gtester.c:276: error: (Each undeclared identifier is reported only once
| gtester.c:276: error: for each function it appears in.)
| gtester.c:276: warning: unused variable 'argv'
| make[4]: *** [gtester.o] Error 1


Index: glib-2.16.1/glib/gtester.c
===================================================================
--- glib-2.16.1.orig/glib/gtester.c	(Revision 6750)
+++ glib-2.16.1/glib/gtester.c	(Arbeitskopie)
@@ -273,7 +273,8 @@
   GTestLogBuffer *tlb;
   GSList *slist, *free_list = NULL;
   GError *error = NULL;
-  const gchar *argv[ARG_MAX];
+  int argc = 0;
+  const gchar **argv;
   GPid pid = 0;
   gint report_pipe[2] = { -1, -1 };
   guint child_report_cb_id = 0;
@@ -289,7 +290,34 @@
       return FALSE;
     }
 
+  /* setup argc */
+  for (slist = subtest_args; slist; slist = slist->next)
+    argc++;
+  /* argc++; */
+  if (subtest_quiet)
+    argc++;
+  if (subtest_verbose)
+    argc++;
+  if (!subtest_mode_fatal)
+    argc++;
+  if (subtest_mode_quick)
+    argc++;
+  else
+    argc++;
+  if (subtest_mode_perf)
+    argc++;
+  if (gtester_list_tests)
+    argc++;
+  if (subtest_seedstr)
+    argc++;
+  argc++;
+  if (skip_tests)
+    argc++;
+  for (slist = subtest_paths; slist; slist = slist->next)
+    argc++;
+
   /* setup argv */
+  argv = g_malloc ((argc + 1) * sizeof(gchar *));
   argv[i++] = binary;
   for (slist = subtest_args; slist; slist = slist->next)
     argv[i++] = (gchar*) slist->data;
@@ -343,8 +371,10 @@
       else
         g_warning ("Failed to execute test binary: %s: %s", argv[0], error->message);
       g_clear_error (&error);
+      g_free (argv);
       return FALSE;
     }
+  g_free (argv);
 
   subtest_running = TRUE;
   subtest_io_pending = TRUE;

