
#
# Patch managed by http://www.mn-logistik.de/unsupported/pxa250/patcher
#

--- inetutils-1.4.2/acinclude.m4~configure	2002-12-11 07:37:59.000000000 -0500
+++ inetutils-1.4.2/acinclude.m4	2004-01-26 16:19:05.000000000 -0500
@@ -554,7 +554,7 @@
 dnl VERSION should be either 4 or 5
 dnl Defines KRB_CFLAGS and KRB_LIBS if found.
 dnl Defines KRB_IMPL to "Heimdal", "MIT", or "OldMIT", or "none" if not found
-AC_DEFUN(IU_CHECK_KRB5,
+AC_DEFUN([IU_CHECK_KRB5],
 [
  if test "x$iu_cv_lib_krb5_libs" = x; then
   cache=""
--- inetutils-1.4.2/configure.ac~configure	2002-12-22 23:27:37.000000000 -0500
+++ inetutils-1.4.2/configure.ac	2004-01-26 16:23:13.000000000 -0500
@@ -529,8 +529,8 @@
 
 jm_INCLUDED_REGEX(libinetutils/regex.c)
 
-AC_CHECK_FUNC(_obstack_free, ,
-  AC_LIBOBJ(obstack) INCLUDES="$INCLUDES obstack.h")
+AC_CHECK_FUNC(_obstack_free, ,[
+  AC_LIBOBJ(obstack) INCLUDES="$INCLUDES obstack.h"])
 
 dnl Use (posix) `setpgid' if it's around, otherwise assume a BSD setpgrp
 AC_CHECK_FUNC(setpgid, , AC_DEFINE(setpgid, setpgrp,
@@ -538,37 +538,37 @@
 
 dnl We use our own version of getopt (including our own header file) if the
 dnl system one doesn't have getopt_long.
-AC_CHECK_FUNC(getopt_long, ,
+AC_CHECK_FUNC(getopt_long, ,[
   AC_LIBOBJ(getopt)
   AC_LIBOBJ(getopt1)
-  INCLUDES="$INCLUDES getopt.h")
+  INCLUDES="$INCLUDES getopt.h"])
 
 dnl Supply a version of poll() if the libray is missing.
 dnl syslogd uses poll() unconditionnaly.
-AC_CHECK_FUNC(poll, ,
+AC_CHECK_FUNC(poll, ,[
   AC_DEFINE(HAVE_POLL_H, 1, [Define to one if you have <poll.h>])
   AC_LIBOBJ(poll)
-  INCLUDES="$INCLUDES poll.h")
+  INCLUDES="$INCLUDES poll.h"])
 
 dnl Supply versions of the BSD error reporting functions if the system doesn't
-AC_CHECK_FUNC(verrx, ,
+AC_CHECK_FUNC(verrx, ,[
   AC_LIBOBJ(err)
-  INCLUDES="$INCLUDES err.h")
+  INCLUDES="$INCLUDES err.h"])
 
 dnl See if the __PROGNAME variable is defined, otherwise use our own.
 AC_CHECK_FUNC(__progname,
   AC_DEFINE(HAVE___PROGNAME, 1, [Define to one if you have __progname]),
-  AC_LIBOBJ(__progname))
+  [AC_LIBOBJ(__progname)])
 
 dnl See if snprintf exists, otherwise just use a bogus version
 AC_CHECK_FUNC(snprintf,
   AC_DEFINE(HAVE_SNPRINTF, 1, [Define to one if you have snprintf]),
-  AC_LIBOBJ(snprintf))
+  [AC_LIBOBJ(snprintf)])
 
 dnl See if vsnprintf exists, otherwise use our own.
 AC_CHECK_FUNC(vsnprintf,
   AC_DEFINE(HAVE_VSNPRINTF, 1, [FIXME]),
-  AC_LIBOBJ(snprintf))
+  [AC_LIBOBJ(snprintf)])
 AH_BOTTOM(
 [#ifndef HAVE_VSNPRINTF
 #include <sys/types.h>
@@ -581,7 +581,7 @@
 #endif])
 
 dnl See if the system has strerror, and replace it if not
-AC_CHECK_FUNC(strerror, , AC_LIBOBJ(strerror))
+AC_CHECK_FUNC(strerror, , [AC_LIBOBJ(strerror)])
 if test "$ac_cv_func_strerror" = no; then
   # No strerror, so see if the SYS_ERRLIST variable can be used by ours
   AC_CHECK_FUNC(sys_errlist, AC_DEFINE(HAVE_SYS_ERRLIST, 1,
@@ -596,7 +596,7 @@
 fi
 
 dnl See if the system has hstrerror, and replace it if not
-AC_CHECK_FUNC(hstrerror, , AC_LIBOBJ(hstrerror))
+AC_CHECK_FUNC(hstrerror, , [AC_LIBOBJ(hstrerror)])
 if test "$ac_cv_func_hstrerror" = yes; then
   AC_CHECK_DECL(hstrerror, , , [#include <netdb.h>])
 else
