Index: coreutils-6.0/lib/utimens.c
===================================================================
--- coreutils-6.0.orig/lib/utimens.c	2006-06-11 09:14:31.000000000 +0200
+++ coreutils-6.0/lib/utimens.c	2008-12-04 13:36:46.000000000 +0100
@@ -75,8 +75,8 @@
    Return 0 on success, -1 (setting errno) on failure.  */
 
 int
-futimens (int fd ATTRIBUTE_UNUSED,
-	  char const *file, struct timespec const timespec[2])
+gl_futimens (int fd ATTRIBUTE_UNUSED,
+	     char const *file, struct timespec const timespec[2])
 {
   /* There's currently no interface to set file timestamps with
      nanosecond resolution, so do the best we can, discarding any
@@ -168,5 +168,5 @@
 int
 utimens (char const *file, struct timespec const timespec[2])
 {
-  return futimens (-1, file, timespec);
+  return gl_futimens (-1, file, timespec);
 }
Index: coreutils-6.0/lib/utimens.h
===================================================================
--- coreutils-6.0.orig/lib/utimens.h	2004-11-23 21:41:51.000000000 +0100
+++ coreutils-6.0/lib/utimens.h	2008-12-04 13:36:46.000000000 +0100
@@ -1,3 +1,3 @@
 #include "timespec.h"
-int futimens (int, char const *, struct timespec const [2]);
+int gl_futimens (int, char const *, struct timespec const [2]);
 int utimens (char const *, struct timespec const [2]);
Index: coreutils-6.0/src/touch.c
===================================================================
--- coreutils-6.0.orig/src/touch.c	2005-11-02 11:01:07.000000000 +0100
+++ coreutils-6.0/src/touch.c	2008-12-04 13:37:43.000000000 +0100
@@ -182,7 +182,7 @@
       t = timespec;
     }
 
-  ok = (futimens (fd, (fd == STDOUT_FILENO ? NULL : file), t) == 0);
+  ok = (gl_futimens (fd, (fd == STDOUT_FILENO ? NULL : file), t) == 0);
 
   if (fd == STDIN_FILENO)
     {
Index: coreutils-6.0/src/copy.c
===================================================================
--- coreutils-6.0.orig/src/copy.c	2008-12-04 13:38:56.000000000 +0100
+++ coreutils-6.0/src/copy.c	2008-12-04 13:39:01.000000000 +0100
@@ -490,7 +490,7 @@
       timespec[0] = get_stat_atime (src_sb);
       timespec[1] = get_stat_mtime (src_sb);
 
-      if (futimens (dest_desc, dst_name, timespec) != 0)
+      if (gl_futimens (dest_desc, dst_name, timespec) != 0)
 	{
 	  error (0, errno, _("preserving times for %s"), quote (dst_name));
 	  if (x->require_preserve)
