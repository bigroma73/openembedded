From 858535f0afbc6d9fa345480408644d4a00584909 Mon Sep 17 00:00:00 2001
From: Tomi Valkeinen <tomi.valkeinen@nokia.com>
Date: Fri, 12 Jun 2009 11:10:14 +0300
Subject: [PATCH 109/146] DSS2: let init_display return an error code

This is needed by an upcoming patch, in which sdi->init_display can
fail.

Signed-off-by: Imre Deak <imre.deak@nokia.com>

Conflicts:

	drivers/video/omap2/dss/display.c
	drivers/video/omap2/dss/dpi.c
	drivers/video/omap2/dss/dsi.c
	drivers/video/omap2/dss/dss.h
	drivers/video/omap2/dss/rfbi.c
	drivers/video/omap2/dss/sdi.c
	drivers/video/omap2/dss/venc.c
---
 drivers/video/omap2/dss/display.c |   15 ++++++++++-----
 drivers/video/omap2/dss/dpi.c     |    4 +++-
 drivers/video/omap2/dss/dsi.c     |    4 +++-
 drivers/video/omap2/dss/dss.h     |   10 +++++-----
 drivers/video/omap2/dss/rfbi.c    |    4 +++-
 drivers/video/omap2/dss/sdi.c     |    4 +++-
 drivers/video/omap2/dss/venc.c    |    4 +++-
 7 files changed, 30 insertions(+), 15 deletions(-)

diff --git a/drivers/video/omap2/dss/display.c b/drivers/video/omap2/dss/display.c
index 20fb1ca..1242c39 100644
--- a/drivers/video/omap2/dss/display.c
+++ b/drivers/video/omap2/dss/display.c
@@ -436,32 +436,37 @@ void dss_init_device(struct platform_device *pdev,
 
 	switch (dssdev->type) {
 	case OMAP_DISPLAY_TYPE_DPI:
-		dpi_init_display(dssdev);
+		r = dpi_init_display(dssdev);
 		break;
 #ifdef CONFIG_OMAP2_DSS_RFBI
 	case OMAP_DISPLAY_TYPE_DBI:
-		rfbi_init_display(dssdev);
+		r = rfbi_init_display(dssdev);
 		break;
 #endif
 #ifdef CONFIG_OMAP2_DSS_VENC
 	case OMAP_DISPLAY_TYPE_VENC:
-		venc_init_display(dssdev);
+		r = venc_init_display(dssdev);
 		break;
 #endif
 #ifdef CONFIG_OMAP2_DSS_SDI
 	case OMAP_DISPLAY_TYPE_SDI:
-		sdi_init_display(dssdev);
+		r = sdi_init_display(dssdev);
 		break;
 #endif
 #ifdef CONFIG_OMAP2_DSS_DSI
 	case OMAP_DISPLAY_TYPE_DSI:
-		dsi_init_display(dssdev);
+		r = dsi_init_display(dssdev);
 		break;
 #endif
 	default:
 		BUG();
 	}
 
+	if (r) {
+		DSSERR("failed to init display %s\n", dssdev->name);
+		return;
+	}
+
 	/* create device sysfs files */
 	i = 0;
 	while ((attr = display_sysfs_attrs[i++]) != NULL) {
diff --git a/drivers/video/omap2/dss/dpi.c b/drivers/video/omap2/dss/dpi.c
index d244e54..b6543c8 100644
--- a/drivers/video/omap2/dss/dpi.c
+++ b/drivers/video/omap2/dss/dpi.c
@@ -360,7 +360,7 @@ static enum omap_dss_update_mode dpi_display_get_update_mode(
 		OMAP_DSS_UPDATE_DISABLED;
 }
 
-void dpi_init_display(struct omap_dss_device *dssdev)
+int dpi_init_display(struct omap_dss_device *dssdev)
 {
 	DSSDBG("init_display\n");
 
@@ -373,6 +373,8 @@ void dpi_init_display(struct omap_dss_device *dssdev)
 	dssdev->get_timings = dpi_get_timings;
 	dssdev->set_update_mode = dpi_display_set_update_mode;
 	dssdev->get_update_mode = dpi_display_get_update_mode;
+
+	return 0;
 }
 
 int dpi_init(void)
diff --git a/drivers/video/omap2/dss/dsi.c b/drivers/video/omap2/dss/dsi.c
index f98da6f..ffac77b 100644
--- a/drivers/video/omap2/dss/dsi.c
+++ b/drivers/video/omap2/dss/dsi.c
@@ -3377,7 +3377,7 @@ static void dsi_configure_overlay(struct omap_overlay *ovl)
 	dispc_setup_plane_fifo(plane, low, high);
 }
 
-void dsi_init_display(struct omap_dss_device *dssdev)
+int dsi_init_display(struct omap_dss_device *dssdev)
 {
 	DSSDBG("DSI init\n");
 
@@ -3407,6 +3407,8 @@ void dsi_init_display(struct omap_dss_device *dssdev)
 
 	dsi.vc[0].dssdev = dssdev;
 	dsi.vc[1].dssdev = dssdev;
+
+	return 0;
 }
 
 int dsi_init(struct platform_device *pdev)
diff --git a/drivers/video/omap2/dss/dss.h b/drivers/video/omap2/dss/dss.h
index 36f401b..53f0f3d 100644
--- a/drivers/video/omap2/dss/dss.h
+++ b/drivers/video/omap2/dss/dss.h
@@ -212,7 +212,7 @@ void dss_set_dac_pwrdn_bgz(bool enable);
 /* SDI */
 int sdi_init(bool skip_init);
 void sdi_exit(void);
-void sdi_init_display(struct omap_dss_device *display);
+int sdi_init_display(struct omap_dss_device *display);
 
 /* DSI */
 int dsi_init(struct platform_device *pdev);
@@ -224,7 +224,7 @@ void dsi_dump_regs(struct seq_file *s);
 void dsi_save_context(void);
 void dsi_restore_context(void);
 
-void dsi_init_display(struct omap_dss_device *display);
+int dsi_init_display(struct omap_dss_device *display);
 void dsi_irq_handler(void);
 unsigned long dsi_get_dsi1_pll_rate(void);
 unsigned long dsi_get_dsi2_pll_rate(void);
@@ -237,7 +237,7 @@ void dsi_pll_uninit(void);
 /* DPI */
 int dpi_init(void);
 void dpi_exit(void);
-void dpi_init_display(struct omap_dss_device *dssdev);
+int dpi_init_display(struct omap_dss_device *dssdev);
 
 /* DISPC */
 int dispc_init(void);
@@ -329,7 +329,7 @@ void dispc_draw_partial_planes(struct omap_dss_device *dssdev);
 int venc_init(struct platform_device *pdev);
 void venc_exit(void);
 void venc_dump_regs(struct seq_file *s);
-void venc_init_display(struct omap_dss_device *display);
+int venc_init_display(struct omap_dss_device *display);
 
 /* RFBI */
 int rfbi_init(void);
@@ -342,6 +342,6 @@ void rfbi_transfer_area(u16 width, u16 height,
 			     void (callback)(void *data), void *data);
 void rfbi_set_timings(int rfbi_module, struct rfbi_timings *t);
 unsigned long rfbi_get_max_tx_rate(void);
-void rfbi_init_display(struct omap_dss_device *display);
+int rfbi_init_display(struct omap_dss_device *display);
 
 #endif
diff --git a/drivers/video/omap2/dss/rfbi.c b/drivers/video/omap2/dss/rfbi.c
index e3cf799..96602ae 100644
--- a/drivers/video/omap2/dss/rfbi.c
+++ b/drivers/video/omap2/dss/rfbi.c
@@ -1294,7 +1294,7 @@ static void rfbi_display_disable(struct omap_dss_device *dssdev)
 	omap_dss_stop_device(dssdev);
 }
 
-void rfbi_init_display(struct omap_dss_device *dssdev)
+int rfbi_init_display(struct omap_dss_device *dssdev)
 {
 	dssdev->enable = rfbi_display_enable;
 	dssdev->disable = rfbi_display_disable;
@@ -1305,4 +1305,6 @@ void rfbi_init_display(struct omap_dss_device *dssdev)
 	rfbi.dssdev[dssdev->phy.rfbi.channel] = dssdev;
 
 	dssdev->caps = OMAP_DSS_DISPLAY_CAP_MANUAL_UPDATE;
+
+	return 0;
 }
diff --git a/drivers/video/omap2/dss/sdi.c b/drivers/video/omap2/dss/sdi.c
index 393fcd5..86b9a56 100644
--- a/drivers/video/omap2/dss/sdi.c
+++ b/drivers/video/omap2/dss/sdi.c
@@ -228,7 +228,7 @@ static void sdi_get_timings(struct omap_dss_device *dssdev,
 	*timings = dssdev->panel.timings;
 }
 
-void sdi_init_display(struct omap_dss_device *dssdev)
+int sdi_init_display(struct omap_dss_device *dssdev)
 {
 	DSSDBG("SDI init\n");
 
@@ -239,6 +239,8 @@ void sdi_init_display(struct omap_dss_device *dssdev)
 	dssdev->set_update_mode = sdi_display_set_update_mode;
 	dssdev->get_update_mode = sdi_display_get_update_mode;
 	dssdev->get_timings = sdi_get_timings;
+
+	return 0;
 }
 
 int sdi_init(bool skip_init)
diff --git a/drivers/video/omap2/dss/venc.c b/drivers/video/omap2/dss/venc.c
index 740c8c0..d8a83b2 100644
--- a/drivers/video/omap2/dss/venc.c
+++ b/drivers/video/omap2/dss/venc.c
@@ -711,7 +711,7 @@ static int venc_set_wss(struct omap_dss_device *dssdev,	u32 wss)
 	return 0;
 }
 
-void venc_init_display(struct omap_dss_device *dssdev)
+int venc_init_display(struct omap_dss_device *dssdev)
 {
 	DSSDBG("init_display\n");
 
@@ -724,6 +724,8 @@ void venc_init_display(struct omap_dss_device *dssdev)
 	dssdev->check_timings = venc_check_timings;
 	dssdev->get_wss = venc_get_wss;
 	dssdev->set_wss = venc_set_wss;
+
+	return 0;
 }
 
 void venc_dump_regs(struct seq_file *s)
-- 
1.6.2.4

