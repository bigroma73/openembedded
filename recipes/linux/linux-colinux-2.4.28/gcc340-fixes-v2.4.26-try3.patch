
#
# Patch managed by http://www.mn-logistik.de/unsupported/pxa250/patcher
#

--- linux-2.4.28/arch/i386/Makefile~gcc340-fixes-v2.4.26-try3	2004-11-17 06:54:21.000000000 -0500
+++ linux-2.4.28/arch/i386/Makefile	2004-11-27 15:59:39.719207784 -0500
@@ -98,6 +98,8 @@
 # due to the lack of sharing of stacklots.
 CFLAGS += $(call check_gcc,-fno-unit-at-a-time,)
 
+CFLAGS += $(call check_gcc,-fno-unit-at-a-time,)
+
 HEAD := arch/i386/kernel/head.o arch/i386/kernel/init_task.o
 
 SUBDIRS += arch/i386/kernel arch/i386/mm arch/i386/lib
--- linux-2.4.28/include/linux/smp.h~gcc340-fixes-v2.4.26-try3	2001-11-22 14:46:19.000000000 -0500
+++ linux-2.4.28/include/linux/smp.h	2004-11-27 16:01:01.519772208 -0500
@@ -26,7 +26,7 @@
 /*
  * sends a 'reschedule' event to another CPU:
  */
-extern void FASTCALL(smp_send_reschedule(int cpu));
+extern void smp_send_reschedule(int cpu);
 
 
 /*
--- linux-2.4.28/mm/page_alloc.c~gcc340-fixes-v2.4.26-try3	2004-11-17 06:54:22.000000000 -0500
+++ linux-2.4.28/mm/page_alloc.c	2004-11-27 15:59:39.851187720 -0500
@@ -46,7 +46,7 @@
 
 int vm_gfp_debug = 0;
 
-static void FASTCALL(__free_pages_ok (struct page *page, unsigned int order));
+static void fastcall __free_pages_ok (struct page *page, unsigned int order);
 
 static spinlock_t free_pages_ok_no_irq_lock = SPIN_LOCK_UNLOCKED;
 struct page * free_pages_ok_no_irq_head;
