Index: minicom-2.1/src/minicom.c
===================================================================
--- minicom-2.1.orig/src/minicom.c	2003-05-16 20:33:19.000000000 +0000
+++ minicom-2.1/src/minicom.c	2008-10-12 23:55:35.000000000 +0000
@@ -153,7 +153,7 @@
 
 #if _HISTORY
 /* Get a line from either window or scroll back buffer. */
-static ELM *getline(w, no)
+static ELM *mcgetline(w, no)
 WIN *w;
 int no;
 {
@@ -194,7 +194,7 @@
 
   w->direct = 0;
   for(f = 0; f < w->ys; f++)
-	wdrawelm(w, f, getline(w, y++));
+	wdrawelm(w, f, mcgetline(w, y++));
   if (r) wredraw(w, 1);
   w->direct = 1;
 }
@@ -222,7 +222,7 @@
   w->direct = 0;
   for (f = 0; f < w->ys; f++)
   {
-	tmp_e = getline(w, y++);
+	tmp_e = mcgetline(w, y++);
 
   	/* First we "accumulate" the line into a variable */
 	wdrawelm_var(w, tmp_e, tmp_line);
@@ -321,7 +321,7 @@
   for (next_line = hit_line; next_line <= all_lines; next_line++)
   {
 	/* we do 'something' here... :-) */
-	tmp_e = getline(w_hist, next_line);
+	tmp_e = mcgetline(w_hist, next_line);
 
   	/*
 	 * First we "accumulate" the line into a variable.
@@ -390,9 +390,9 @@
 int end;
 {
   if (y+citey >= start && y+citey <= end) 
-	wdrawelm_inverse(w, y, getline(w, y+citey));
+	wdrawelm_inverse(w, y, mcgetline(w, y+citey));
   else
-	wdrawelm(w, y, getline(w, y+citey));
+	wdrawelm(w, y, mcgetline(w, y+citey));
 }
 
 static void drawcite_whole(w, y, start, end)
@@ -416,7 +416,7 @@
   for (y=start; y<=end; y++) {
 	vt_send('>');
 	vt_send(' ');
-	tmp_e = getline(w, y);
+	tmp_e = mcgetline(w, y);
 	wdrawelm_var(w, tmp_e, tmp_line);
 	tmp_line[w->xs]=0;
 	for (x=w->xs-1; x>=0; x--){
@@ -599,7 +599,7 @@
 			inverse =
 			  (y+cite_y >= cite_ystart && y+cite_y <= cite_yend);
 		} else {
-        		tmp_e = getline(b_us, y);
+        		tmp_e = mcgetline(b_us, y);
 			if (strlen(look_for) > 1)
 			{
 			  /* quick scan for pattern match */
@@ -618,8 +618,8 @@
 			inverse = 0;
 		}
 #endif /*_SEARCH_HISTORY*/
-		if (inverse) wdrawelm_inverse(b_us, 0, getline(b_us, y));
-		else wdrawelm(b_us, 0, getline(b_us, y));
+		if (inverse) wdrawelm_inverse(b_us, 0, mcgetline(b_us, y));
+		else wdrawelm(b_us, 0, mcgetline(b_us, y));
 		if (citemode) wlocate(b_us, 0, cite_y);
 		wflush();
 		break;
@@ -652,7 +652,7 @@
 			inverse =
 			  (y+cite_y >= cite_ystart && y+cite_y <= cite_yend);
 		} else {
-        		tmp_e = getline(b_us, y + b_us->ys - 1);
+        		tmp_e = mcgetline(b_us, y + b_us->ys - 1);
 			if (strlen(look_for) > 1)
 			{
 				/* quick scan for pattern match */
@@ -673,10 +673,10 @@
 #endif /*_SEARCH_HISTORY*/
 		if (inverse)
 			wdrawelm_inverse(b_us, b_us->ys - 1, 
-			  getline(b_us, y + b_us->ys - 1));
+			  mcgetline(b_us, y + b_us->ys - 1));
 		else
 			wdrawelm(b_us, b_us->ys - 1, 
-			  getline(b_us, y + b_us->ys - 1));
+			  mcgetline(b_us, y + b_us->ys - 1));
 		if (citemode) wlocate(b_us, 0, cite_y);
 		wflush();
 		break;
@@ -760,7 +760,7 @@
 		wlocate(b_st, 0, 0);
 		wprintf(b_st, hline);
 		wredraw(b_st, 1);
-		wdrawelm_inverse(b_us, cite_y, getline(b_us, cite_ystart));
+		wdrawelm_inverse(b_us, cite_y, mcgetline(b_us, cite_ystart));
 		wlocate(b_us, 0, cite_y);
 		break;
 	  case K_ESC:
